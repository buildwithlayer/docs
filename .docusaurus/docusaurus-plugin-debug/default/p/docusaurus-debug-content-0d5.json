{"allContent":{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/","tagsPath":"/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/Users/ayaangill/Desktop/Layer/Repos/docs/sidebars.ts","contentPath":"/Users/ayaangill/Desktop/Layer/Repos/docs/docs","contentPathLocalized":"/Users/ayaangill/Desktop/Layer/Repos/docs/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"id":"deployments/copilot","title":"GitHub Copilot Extension","description":"","source":"@site/docs/deployments/copilot.md","sourceDirName":"deployments","slug":"/deployments/copilot","permalink":"/deployments/copilot","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"VS Code Extension","permalink":"/deployments/vs-code"},"next":{"title":"OpenAI GPTs (Coming Soon)","permalink":"/deployments/gpt"}},{"id":"deployments/gemini","title":"Google Gemini Tools (Coming Soon)","description":"","source":"@site/docs/deployments/gemini.md","sourceDirName":"deployments","slug":"/deployments/gemini","permalink":"/deployments/gemini","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"OpenAI GPTs (Coming Soon)","permalink":"/deployments/gpt"}},{"id":"deployments/gpt","title":"OpenAI GPTs (Coming Soon)","description":"","source":"@site/docs/deployments/gpt.md","sourceDirName":"deployments","slug":"/deployments/gpt","permalink":"/deployments/gpt","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"GitHub Copilot Extension","permalink":"/deployments/copilot"},"next":{"title":"Google Gemini Tools (Coming Soon)","permalink":"/deployments/gemini"}},{"id":"deployments/index","title":"Deployment Surfaces","description":"","source":"@site/docs/deployments/index.md","sourceDirName":"deployments","slug":"/deployments/","permalink":"/deployments/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Analytics","permalink":"/management-dashboard/analytics"},"next":{"title":"Web Widget","permalink":"/deployments/web-widget"}},{"id":"deployments/vs-code","title":"VS Code Extension","description":"","source":"@site/docs/deployments/vs-code.md","sourceDirName":"deployments","slug":"/deployments/vs-code","permalink":"/deployments/vs-code","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Web Widget","permalink":"/deployments/web-widget"},"next":{"title":"GitHub Copilot Extension","permalink":"/deployments/copilot"}},{"id":"deployments/web-widget","title":"Web Widget","description":"","source":"@site/docs/deployments/web-widget.md","sourceDirName":"deployments","slug":"/deployments/web-widget","permalink":"/deployments/web-widget","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Deployment Surfaces","permalink":"/deployments/"},"next":{"title":"VS Code Extension","permalink":"/deployments/vs-code"}},{"id":"intro","title":"Introduction","description":"Welcome to Layer, the platform that transforms your product documentation into AI-powered chat assistants. With Layer, your developers no longer have to sift through heaps of documentation. Instead, they get accurate, context-specific answers directly in their IDEs, on your website, and within the AI tools they already use.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/","permalink":"/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"slug":"/"},"sidebar":"tutorialSidebar","next":{"title":"Management Dashboard","permalink":"/management-dashboard/"}},{"id":"management-dashboard/analytics","title":"Analytics","description":"","source":"@site/docs/management-dashboard/analytics.md","sourceDirName":"management-dashboard","slug":"/management-dashboard/analytics","permalink":"/management-dashboard/analytics","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Deploying","permalink":"/management-dashboard/deploying"},"next":{"title":"Deployment Surfaces","permalink":"/deployments/"}},{"id":"management-dashboard/deploying","title":"Deploying","description":"","source":"@site/docs/management-dashboard/deploying.md","sourceDirName":"management-dashboard","slug":"/management-dashboard/deploying","permalink":"/management-dashboard/deploying","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"RAG Configuration","permalink":"/management-dashboard/rag-config"},"next":{"title":"Analytics","permalink":"/management-dashboard/analytics"}},{"id":"management-dashboard/index","title":"Management Dashboard","description":"Management Dashboard Screenshot","source":"@site/docs/management-dashboard/index.md","sourceDirName":"management-dashboard","slug":"/management-dashboard/","permalink":"/management-dashboard/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/"},"next":{"title":"Managing Sources","permalink":"/management-dashboard/sources"}},{"id":"management-dashboard/rag-config","title":"RAG Configuration","description":"","source":"@site/docs/management-dashboard/rag-config.md","sourceDirName":"management-dashboard","slug":"/management-dashboard/rag-config","permalink":"/management-dashboard/rag-config","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Testing the RAG","permalink":"/management-dashboard/rag-testing"},"next":{"title":"Deploying","permalink":"/management-dashboard/deploying"}},{"id":"management-dashboard/rag-testing","title":"Testing the RAG","description":"In order to validate that the Retrieval-Augmented Generation (RAG) system is providing accurate and relevant responses from your sources, you can test the chat in our Testing Widget. This helps ensure your developers receive the correct information when interacting with the AI-powered assistants deployed through Layer.","source":"@site/docs/management-dashboard/rag-testing.md","sourceDirName":"management-dashboard","slug":"/management-dashboard/rag-testing","permalink":"/management-dashboard/rag-testing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Managing Tools (Coming Soon)","permalink":"/management-dashboard/tools"},"next":{"title":"RAG Configuration","permalink":"/management-dashboard/rag-config"}},{"id":"management-dashboard/sources","title":"Managing Sources","description":"Layer uses sources to feed its RAG (Retrieval-Augmented Generation) system, which provides specific and accurate responses to your developers' queries. These sources may consist of your product's documentation, FAQs, GitHub repositories, and other helpful resources that can be referenced by your LLM extensions.","source":"@site/docs/management-dashboard/sources.md","sourceDirName":"management-dashboard","slug":"/management-dashboard/sources","permalink":"/management-dashboard/sources","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Management Dashboard","permalink":"/management-dashboard/"},"next":{"title":"Managing Tools (Coming Soon)","permalink":"/management-dashboard/tools"}},{"id":"management-dashboard/tools","title":"Managing Tools (Coming Soon)","description":"Tools will allow developers to call the API endpoints you specify using natural language within your LLM extensions.","source":"@site/docs/management-dashboard/tools.md","sourceDirName":"management-dashboard","slug":"/management-dashboard/tools","permalink":"/management-dashboard/tools","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Managing Sources","permalink":"/management-dashboard/sources"},"next":{"title":"Testing the RAG","permalink":"/management-dashboard/rag-testing"}}],"drafts":[],"sidebars":{"tutorialSidebar":[{"type":"doc","id":"intro"},{"type":"category","label":"Management Dashboard","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"management-dashboard/sources"},{"type":"doc","id":"management-dashboard/tools"},{"type":"doc","id":"management-dashboard/rag-testing"},{"type":"doc","id":"management-dashboard/rag-config"},{"type":"doc","id":"management-dashboard/deploying"},{"type":"doc","id":"management-dashboard/analytics"}],"link":{"type":"doc","id":"management-dashboard/index"}},{"type":"category","label":"Deployment Surfaces","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"deployments/web-widget"},{"type":"doc","id":"deployments/vs-code"},{"type":"doc","id":"deployments/copilot"},{"type":"doc","id":"deployments/gpt"},{"type":"doc","id":"deployments/gemini"}],"link":{"type":"doc","id":"deployments/index"}}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[{"id":"llm_extensibility","metadata":{"permalink":"/blog/llm_extensibility","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/llm_extensibility.mdx","source":"@site/blog/llm_extensibility.mdx","title":"LLM Extensibility: Unifying Brands, Developers, and AI Surfaces","description":"Layer AI Blog | What Is LLM Extensibility?","date":"2025-01-28T00:00:00.000Z","tags":[{"inline":true,"label":"LLM Extensibility","permalink":"/blog/tags/llm-extensibility"}],"readingTime":5.7,"hasTruncateMarker":false,"authors":[{"name":"Jonah Katz","title":"Co-Founder and CEO @ Layer","url":"https://www.linkedin.com/in/jonahkatz1/","imageURL":"https://media.licdn.com/dms/image/v2/D5603AQGcdwug9LunVA/profile-displayphoto-shrink_400_400/profile-displayphoto-shrink_400_400/0/1727827703156?e=1743638400&v=beta&t=S4adBtUI5ELMYeuV-xjKvHl5lB8k6IaQ6T6gXhVvuuk","key":"jkatz","page":null},{"name":"Andrew Hamilton","title":"Co-Founder and CTO @ Layer","url":"https://github.com/andrewlayer","imageURL":"https://avatars.githubusercontent.com/u/135887157?v=4","key":"aham","page":null}],"frontMatter":{"slug":"llm_extensibility","title":"LLM Extensibility: Unifying Brands, Developers, and AI Surfaces","authors":["jkatz","aham"],"date":"2025-01-28T00:00:00.000Z","descripion":"What is LLM Extensibility? Learn how devs, brands, and AI surfaces unify their workflows for real-time, reliable AI—without fragmented code or docs.","tags":["LLM Extensibility"],"keywords":["LLM Extensibility"]},"unlisted":false,"nextItem":{"title":"Keep Your Data DRY with APIFlask","permalink":"/blog/dry_with_apiflask"}},"content":"<head>\n  <title>Layer AI Blog | What Is LLM Extensibility?</title>\n</head>\n\n## The Trust Gap in AI-Assisted Coding\n\nAsk any developer who’s turned to an AI chatbot for coding help, and you’ll likely hear the same question, reverberating at various volumes in their heads: “Can I really trust this snippet?”\nYou never know if the chatbot is scraping outdated docs, merging conflicting tutorials, or pulling random code from unmaintained repos. Worse, you’re forced to juggle multiple platforms—IDE, browser, chat window—just to test and integrate those suggestions.\nNobody wants to waste hours verifying code that was supposed to save them time. That’s where LLM Extensibility steps in, bringing curated, brand-approved-and-controlled data that stays in sync across every AI environment you rely on. The result? A coding assistant you can actually trust, with fewer late-night debugging sessions and far less copy-paste chaos.\n\n## What Is LLM Extensibility—and Why Does It Matter?\n\nLLM Extensibility is the process of embedding brand-approved, continuously updated knowledge and functionality directly into AI environments—so that developers, businesses, and AI platforms can collaborate more effectively. Instead of letting tools like ChatGPT or GitHub Copilot scrape the open web for partial information, LLM Extensibility ensures they always draw from the most reliable, real-time sources.\nThis means a single, consistent pipeline: when a company publishes official documentation, code samples, or best practices into an “LLM extension,” developers see the correct info wherever they use AI—whether that’s in VS Code, Copilot, ChatGPT, Anthropic, or any other AI surface. No guesswork, no stale references, and a drastically simpler way to trust the AI’s output.\n\n## Everybody Wins: Unifying Brands, Developers, and AI Surfaces\n\nWhen your API is constantly evolving (think Stripe, Plaid, Neon, or any fast-moving platform), it’s no small feat to keep docs consistent across various AI tools. Developers often piece together partially-hallucinated code snippets with trial and error, leading to bugs, confusion, and extra support overhead. LLM Extensibility solves that by offering a single source of truth for docs, code samples, and best practices—across every AI environment that matters.\nBrands gain direct control over how popular AI tools assist developers with their APIs and SDKs. By building extensions for ecosystems like ChatGPT, Claude, and GitHub Copilot, they embed up-to-date, brand-approved content and functionality right where developers live—ensuring consistency, reliability, and a smoother path to integration.\nDevelopers can trust that what they’re pulling is always current and aligned with official best practices. Plus, the AI can do more than advise: it can open pull requests, run tests, or spin up resources in the developer’s environment, guided by reliable content.\nAI Surfaces (VS Code, ChatGPT, GitHub Copilot, Anthropic, etc.) deliver a richer, more consistent user experience. Instead of scraping partial data and generating hallucinated code, they plug into a universal source of truth that updates in real time and brings powerful agentic functionality to their users.\nOf course, not every AI platform has embraced extensibility yet. Some, like Cursor, remain closed off—for now. But as the ecosystem around LLM extensibility grows, user expectations will evolve, and every surface will likely open up to brand-specific extensions to stay competitive.\n\n## Why Not Just “Ask ChatGPT”?\n\nIf ChatGPT (or another super powerful LLM) can browse the web, why bother with a brand-managed extension? The short answer is reliability and control.\nOpen-web crawling might yield half-correct references or piecemeal code that no longer matches a brand’s latest version. An official extension, on the other hand, feeds the AI precisely what the brand wants it to see—nothing more, nothing less.\nFor developers, that means fewer misfires. Instead of sifting through questionable snippets, they can rely on curated, brand-sanctioned responses. Couple that with the AI’s ability to manipulate files in your IDE or open pull requests in GitHub, and you’ve got an active collaborator rather than a passive advisor. You still oversee or approve changes, but the manual copy-paste grind disappears.\n\n## One Extension, Many Surfaces—Build Once, Publish Everywhere\n\nYes, a company could build separate plugins for each AI environment—VS Code extension, Github Copilot extension, OpenAI GPT, Anthropic MCP Server—and manually update each one whenever their docs or OpenAPI spec changes. But that approach is time-consuming and prone to version drift.\nA single publishing model makes far more sense: create one extension (containing your official docs, code samples, or agentic actions), then deploy it to whichever AI surfaces you want to support. Whenever you update your docs or add new features, every environment reflects the change at once. It’s akin to how mobile “app stores” let you distribute updates universally; here, you’re distributing brand content and logic to multiple AI tools.\nThis is the vision behind platforms like Layer, which aim to unify LLM Extensibility. Rather than building piecemeal integrations for each environment, you create a single extension—your “source of truth”—and publish it across supported surfaces from one central dashboard. Brands update content once, developers find consistent, up-to-date docs and agentic tools, and AI surfaces reap the benefits of official, high-quality knowledge.\n[Art Placeholder: A short video demo or screenshot illustrating how Layer—or a similar platform—lets you manage one AI extension and push it across various surfaces with a single click.]\n\n## Insights and Efficiency for Everyone\n\nOne huge benefit of LLM Extensibility is the insight it provides. Brands that control their extension can track real-world usage: which queries come up most often, which features confuse developers, and where the biggest gaps lie. That feedback loop shapes future documentation tweaks and even core product decisions.\nDevelopers, meanwhile, can streamline their workflows. They no longer hunt down the right doc version or wonder if a snippet is still valid; the AI always references the latest info. And AI surfaces gain a reputation for trustworthy guidance, pulling from an official source rather than stitching together random web scraps.\n\n## Where AI Goes from Here\n\nWe’re already seeing signs that AI can do more than suggest code—it can act. Opening pull requests, provisioning services, or orchestrating CI/CD pipelines are all becoming part of an LLM’s repertoire. LLM Extensibility paves the way for that evolution by grounding these actions in brand-approved data and logic. And as more AI surfaces become extensible, the line between “AI advice” and “AI-driven automation” continues to blur.\nThat’s good news for everyone in this conversation: brands, developers, and AI platform providers. With a unified extensibility model, changes happen once, code is consistently accurate, and developers can do more with less friction. Instead of scraping questionable snippets or juggling plugin updates, the future looks a lot more connected—and a lot more trustworthy.\nThat’s the essence of LLM Extensibility: a blueprint for AI that respects brand control, fosters developer confidence, and unlocks richer, continuously updated capabilities across all the surfaces where work actually happens. If you’re ready to leave behind scattered docs and fragmented plugin strategies, this could be the next big step toward a smarter, more seamless AI pipeline."},{"id":"dry_with_apiflask","metadata":{"permalink":"/blog/dry_with_apiflask","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/dry_with_api_flask.mdx","source":"@site/blog/dry_with_api_flask.mdx","title":"Keep Your Data DRY with APIFlask","description":"Lead Author: Gavyn","date":"2021-01-23T00:00:00.000Z","tags":[{"inline":true,"label":"DRY","permalink":"/blog/tags/dry"},{"inline":true,"label":"APIFlask","permalink":"/blog/tags/api-flask"},{"inline":true,"label":"SQLAlchemy","permalink":"/blog/tags/sql-alchemy"},{"inline":true,"label":"Marshmallow","permalink":"/blog/tags/marshmallow"},{"inline":true,"label":"OneOfSchema","permalink":"/blog/tags/one-of-schema"}],"readingTime":12.515,"hasTruncateMarker":false,"authors":[{"name":"Gavyn Partlow","title":"Software Engineer @ Layer","url":"https://github.com/GavynWithLayer","imageURL":"https://avatars.githubusercontent.com/u/151399782?v=4","key":"gpart","page":null},{"name":"Lucas Gismondi","title":"Software Engineer @ Layer","url":"https://github.com/lucasgismondi-gg","imageURL":"https://avatars.githubusercontent.com/u/121511329?v=4","key":"lgis","page":null},{"name":"Andrew Hamilton","title":"Co-Founder and CTO @ Layer","url":"https://github.com/andrewlayer","imageURL":"https://avatars.githubusercontent.com/u/135887157?v=4","key":"aham","page":null}],"frontMatter":{"slug":"dry_with_apiflask","title":"Keep Your Data DRY with APIFlask","authors":["gpart","lgis","aham"],"date":"2021-01-23T00:00:00.000Z","descripion":"Lead by Gavyn, Co-authored by Lucas and Andrew","tags":["DRY","APIFlask","SQLAlchemy","Marshmallow","OneOfSchema"]},"unlisted":false,"prevItem":{"title":"LLM Extensibility: Unifying Brands, Developers, and AI Surfaces","permalink":"/blog/llm_extensibility"}},"content":"<small>\n**Lead Author:** Gavyn<br/>\n**Co-Authors:** Lucas, Andrew<br/>\n\nAssociated Repository: [blog-dry_api_flask_demo](https://github.com/buildwithlayer/blog-dry_api_flask_demo)<br/>\n</small>\n\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n## ☔️ When it starts to rain \nWhen working with a traditional [Model/View/Controller](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller) approach, \nit is easy to fall suspect to code duplication. I've\nseen it with coworkers, friends, and even family. No one is safe from code duplication. However, there are some tips and\ntricks you can use with Flask to help protect yourself and your loved ones.\n\n## Data Sources\nFirst, let's talk about where data comes from and how it can trick us into making the same models multiple times.\n\n### Database + SQLAlchemy\n\nThe main source of data in most backends is a database (it's in the name). If you've been around the block and done more\nthan a few python APIs, you're probably familiar with tools like [Flask](https://flask.palletsprojects.com/en/) and [SQLAlchemy](https://www.sqlalchemy.org/). SQLAlchemy is great to help you\nmodel and manage data in your database without ever writing a line of SQL, and that's every developer's dream.\n\nWhen working with Flask and SQLAlchemy, you'll often see ORM models like this:\n\n\n```python\nclass Farmer(db.Model):\n    id: Mapped[int] = mapped_column(\n        Integer, primary_key=True,\n    )\n    created_at: Mapped[DateTime] = mapped_column(\n        DateTime, nullable=False, server_default=func.now(),\n    )\n    updated_at: Mapped[DateTime] = mapped_column(\n        DateTime, nullable=False, server_default=func.now(), onupdate=func.now(),\n    )\n    name: Mapped[str] = mapped_column(\n        String, nullable=False,\n    )\n```\n\nAnd this is great! You've got an abstraction of the columns in your `farmer` table. Not only can you read, create,\nupdate, and delete your farmers from your database with ease, but you can also make changes to the table itself, and\nSQLAlchemy will help you migrate your data. Very developer friendly and very useful!\n\n### APIs + Marshmallow\n\nThe next source of data in any API backend is the APIs themselves! You've got two categories of data: requests and\nresponses. In many cases, developers follow a model/view/controller pattern, and the GET routes are returning something\nnearly identical to the ORM model.\n\nLet's extend our example:\n\n```python\nfarmers_bp = APIBlueprint(\n    \"farmers\", __name__, enable_openapi=True\n)\n\n# Marshmallow Schema\nclass FarmerOut(Schema):\n    id = fields.Integer(required=True)\n    created_at = fields.DateTime(required=True)\n    updated_at = fields.DateTime(required=True)\n    name = fields.String(required=True)\n\n# Flask Route\n@farmers_bp.get(\"/<int:farmer_id>\")\n@farmers_bp.output(FarmerOut)\ndef get_farmer_by_id(farmer_id: int):\n    farmer = Farmer.query.where(Farmer.id == farmer_id).first()\n    if farmer is None:\n        raise HTTPError(404, message=\"Farmer not found\")\n    return farmer\n```\n\nNow if there exists a record in our database, we can ping `farmers/1` and get the following response:\n\n```js\n{\n  \"created_at\": \"2023-12-12T15:51:00\",\n  \"id\": 1,\n  \"name\": \"Old MacDonald\",\n  \"updated_at\": \"2023-12-12T15:51:00\"\n}\n```\n\n### 🌊 Monsoon Season \n\nThe well-seasoned developer might dust off their salt and pepper and say, \"Wait! I've seen those same fields before!\"\nAnd they'd be right! Looking at the `Farmer` class and the `FarmerOut` class, the fields are nearly identical.\n\n\n<Tabs>\n  <TabItem value=\"orange\" label=\"SQLAlchemy\" default>\n    \n    ```python\n    # SQLAlchemy Schema\n    class Farmer(db.Model):\n        id: Mapped[int] = mapped_column(Integer, primary_key=True)\n        created_at: Mapped[DateTime] = mapped_column(DateTime, nullable=False, server_default=func.now())\n        updated_at: Mapped[DateTime] = mapped_column(DateTime, nullable=False, server_default=func.now(), onupdate=func.now())\n        name: Mapped[str] = mapped_column(String, nullable=False)\n    ```\n  </TabItem>\n  <TabItem value=\"apple\" label=\"Marshmallow\" >\n    ```python\n    # Marshmallow Schema\n    class FarmerOut(Schema):\n        id = fields.Integer(required=True)\n        created_at = fields.DateTime(required=True)\n        updated_at = fields.DateTime(required=True)\n        name = fields.String(required=True)\n    ```\n  </TabItem>\n</Tabs>\n\nThis is definitely a bad look. Imagine if we were to add a new field to the `Farmer` class? Or even more sneaky, change\nthe type of one of the fields? We'd then have to update `FarmerOut` and any other schemas we may have in the future that\ninclude `Farmer` to match. This is a burden on developers, but it also is a chance for subtle bugs to creep in.\n\n## Buy 1, Get 1 Free!\n\nThankfully, we have some tools at our disposal to help avoid this kind of disaster. Enter [`SQLAlchemyAutoSchema`](https://marshmallow-sqlalchemy.readthedocs.io/en/latest/api_reference.html), stage\nleft. Let's look at how we can use [`flask-marshmallow`](https://flask-marshmallow.readthedocs.io/en/latest/) and `SQLAlchemyAutoSchema` to help avoid all this duplication.\n\n### Simple Example\n\nBelow our `Farmer` definition, we can add a new class for the `FarmerSchema` as follows:\n\n```python\nclass FarmerSchema(marsh.SQLAlchemyAutoSchema):\n    class Meta:\n        model = Farmer\n```\n\nThen, we just update our route to use this new schema:\n\n```python\n@farmers_bp.get(\"/<int:farmer_id>\")\n@farmers_bp.output(FarmerSchema) # <-- Updated\ndef get_farmer_by_id(farmer_id: int):\n    farmer = Farmer.query.where(Farmer.id == farmer_id).first()\n    if farmer is None:\n        raise HTTPError(404, message=\"Farmer not found\")\n    return farmer\n```\n\nAnd now, if we were to ping the same request as before, we get the same response! This is thanks to the\n`SQLAlchemyAutoSchema` automatically parsing all the properties of the associated `model` (passed in its `Meta` class).\nThis means any new fields added to our ORM model will be automatically added to our schema!\n\n### Relationships\n\nLet's add a new ORM model that has a many-to-one relationship with the `Farmer`, such as chickens.\n\n<Tabs>\n  <TabItem value=\"image\" label=\"Image\" default>\n    <div style={{\"text-align\": \"center\"}}>\n        ![farmer-chicken-schema](./assets/farmer_chicken.png)\n    </div>\n  </TabItem>\n  <TabItem value=\"code\" label=\"Code\">\n  \n    ```python\n    class Sex(enum.Enum):\n        MALE = \"male\"\n        FEMALE = \"female\"\n\n\n    class Chicken(db.Model):\n        id: Mapped[int] = mapped_column(\n            Integer, primary_key=True,\n        )\n        created_at: Mapped[DateTime] = mapped_column(\n            DateTime, nullable=False, server_default=func.now(),\n        )\n        updated_at: Mapped[DateTime] = mapped_column(\n            DateTime, nullable=False, server_default=func.now(), onupdate=func.now(),\n        )\n        farmer_id: Mapped[int] = mapped_column(\n            Integer, ForeignKey(\"farmer.id\", ondelete=\"CASCADE\"),\n        )\n        age: Mapped[int] = mapped_column(\n            Integer, nullable=False,\n        )\n        sex: Mapped[Sex] = mapped_column(\n            Enum(Sex), nullable=False,\n        )\n\n\n    class ChickenSchema(marsh.SQLAlchemyAutoSchema):\n        class Meta:\n            model = Chicken\n    ```\n    \n  </TabItem>\n</Tabs>\n\nOh no, it's starting to rain. We have duplication on some of our fields in the model (`id`, `created_at`, `updated_at`),\nbut we are seasoned developers, and we know we can just abstract that out to a `BaseModel` of sorts. No biggie!\n\n<Tabs>\n    <TabItem value=\"image\" label=\"Image\" default>\n        <div style={{\"text-align\": \"center\"}}>\n            ![farmer-chicken-schema](./assets/farmer_chicken_base.png)\n        </div>\n    </TabItem>\n    <TabItem value=\"code\" label=\"Code\">\n\n    ```python\n    class BaseModel(db.Model):\n        id: Mapped[int] = mapped_column(\n            Integer, primary_key=True,\n        )\n        created_at: Mapped[DateTime] = mapped_column(\n            DateTime, nullable=False, server_default=func.now(),\n        )\n        updated_at: Mapped[DateTime] = mapped_column(\n            DateTime, nullable=False, server_default=func.now(), onupdate=func.now(),\n        )\n\n        # --- METADATA ---\n        __abstract__ = True\n    ```\n\n    </TabItem>\n</Tabs>\nAnd then we just inherit from the `BaseModel` for both `Farmer` and `Chicken`. Easy! The `Farmer` class is looking very\nsimple now, which is good.\n\n```python\nclass Farmer(BaseModel):\n    name: Mapped[str] = mapped_column(\n        String, nullable=False,\n    )\n\n    # --- RELATIONSHIPS ---\n    chickens: Mapped[List[Chicken]] = relationship(\n        \"Chicken\", cascade=\"all, delete\",\n    )\n```\n\nBut what about the duplication of the `Schema` classes we are making? They are the same each time, except the\n`Meta.model` points to whichever model the schema belongs to. How could we extract this out to reduce duplication? Well,\nknow that we have a `BaseModel`, let's just give it a `classmethod` that generates our `Schema` class for us!\n\n```python\nclass BaseMeta(object):\n    include_relationships = True\n\n\nclass BaseModel(db.Model):\n    ...\n    __schema__ = None\n    \n    @classmethod\n    def make_schema(cls) -> type(SQLAlchemyAutoSchema):\n        if cls.__schema__ is not None:\n            return cls.__schema__\n        \n        meta_kwargs = {\n            \"model\": cls,\n        }\n        meta_class = type(\"Meta\", (BaseMeta,), meta_kwargs)\n        \n        schema_kwargs = {\n            \"Meta\": meta_class\n        }\n        schema_name = f\"{cls.__name__}Schema\"\n        \n        cls.__schema__ = type(schema_name, (SQLAlchemyAutoSchema,), schema_kwargs)\n        return cls.__schema__\n```\n\nThis is a pretty crafty method that creates a customer `Meta` class for the given `cls`, and then uses that in a custom\n`SQLAlchemyAutoSchema` class, which is then returned. We can now set the `FarmerSchema` and `ChickenSchema` as follows:\n\n```python\nFarmerSchema = Farmer.make_schema()\nChickenSchema = Chicken.make_schema()\n```\n\nNow, let's add a couple of chickens for the farmer in our database, and test out the same endpoint. Here is the\nresponse:\n\n```js\n{\n  \"chickens\": [\n    1,\n    2\n  ],\n  \"created_at\": \"2023-12-12T15:51:00\",\n  \"id\": 1,\n  \"name\": \"Old MacDonald\",\n  \"updated_at\": \"2023-12-12T15:51:00\"\n}\n```\n\nWhat's going on here? We have the `include_relationships` property in `FarmerSchema.Meta`, so why are we only getting\nthe `id` of each `Chicken`? Unfortunately, the way to get composition relationships in `marshmallow.Schema` is through\n`Nested` fields. There is no auto translation of `SQLAlchemy.relationship()` to `marshmallow.fields.Nested`, but we are\nclever developers, right? We can figure something out.\n\n```python\nclass BaseModel(db.Model):\n    ...\n    @classmethod\n    def get_relationship(cls, attr_name: str) -> Optional[Relationship]:\n        attr = getattr(cls, attr_name)\n        prop = getattr(attr, \"property\", None)\n        if prop is None or not isinstance(prop, Relationship):\n            return None\n        return prop\n    \n    @classmethod\n    def nest_attribute(cls, attr_name: str, prop: Relationship, schema_kwargs: dict):\n        many = getattr(prop, \"collection_class\", None) is not None\n        entity = getattr(prop, \"entity\", None)\n        nested_class = getattr(entity, \"class_\", None)\n        if not hasattr(nested_class, \"make_schema\"):\n            raise TypeError(f\"Unexpected nested type [{type(nested_class).__name__}]\")\n\n        schema_kwargs[attr_name] = fields.Nested(\n            nested_class.make_schema()(many=many)\n        )\n    \n    @classmethod\n    def make_schema(cls) -> type(SQLAlchemyAutoSchema):        \n        ... # same as before\n\n        # Add relationships to the schema\n        for attr_name in cls.__dict__:\n            if (prop := cls.get_relationship(attr_name)) is not None:\n                cls.nest_attribute(attr_name, prop, schema_kwargs)\n\n        cls.__schema__ = type(schema_name, (SQLAlchemyAutoSchema,), schema_kwargs)\n        return cls.__schema__\n```\n\nThis new `make_schema()` method will automatically detect any fields that are `SQLAlchemy.Relationships`, and convert\nthem to the appropriate `marshmallow.fields.Nested()` as long as the class inherits from `BaseModel`. Pretty nifty!\n\nNow, if we make the same request as before, let's see what we get:\n\n> TypeError: Object of type Sex is not JSON serializable\n\nNot the first time I've heard that. Let's see what we can do to fix this. The issue is very similar to the relationship\nvs. nested problem we saw before. `SQLAlchemy` has one notion of an `Enum`, while `marshmallow` has another. We can do a\nsimilar conversion within our `make_schema` function as follows:\n\n```python\nclass BaseModel(db.Model):\n    ... # same as before\n    @classmethod\n    def get_enum(cls, attr_name: str) -> Optional[Type[Enum]]:\n        attr = getattr(cls, attr_name)\n        attr_type = getattr(attr, \"type\", None)\n        if attr_type is None:\n            return None\n\n        return getattr(attr_type, \"enum_class\", None)\n\n    @classmethod\n    def enum_attribute(cls, attr_name: str, enum_class: Type[Enum], schema_kwargs: dict):\n        schema_kwargs[attr_name] = fields.Enum(enum_class)\n\n    @classmethod\n    def make_schema(cls) -> type(SQLAlchemyAutoSchema):\n        ... # same as before\n\n        for attr_name in cls.__dict__:\n            if (prop := cls.get_relationship(attr_name)) is not None:\n                cls.nest_attribute(attr_name, prop, schema_kwargs)\n            elif (enum_class := cls.get_enum(attr_name)) is not None:\n                cls.enum_attribute(attr_name, enum_class, schema_kwargs)\n\n        cls.__schema__ = type(schema_name, (SQLAlchemyAutoSchema,), schema_kwargs)\n        return cls.__schema__\n```\n\nNow, when we make the same request, we get:\n\n```js\n{\n  \"chickens\": [\n    {\n      \"age\": 3,\n      \"created_at\": \"2023-12-12T18:17:53\",\n      \"id\": 1,\n      \"sex\": \"MALE\",\n      \"updated_at\": \"2023-12-12T18:17:53\"\n    },\n    {\n      \"age\": 2,\n      \"created_at\": \"2023-12-12T18:46:30\",\n      \"id\": 2,\n      \"sex\": \"FEMALE\",\n      \"updated_at\": \"2023-12-12T18:46:30\"\n    }\n  ],\n  \"created_at\": \"2023-12-12T15:51:00\",\n  \"id\": 1,\n  \"name\": \"Old MacDonald\",\n  \"updated_at\": \"2023-12-12T15:51:00\"\n}\n```\n\n### Polymorphism\n\nNow that our relationships are healthy, we can move to the next step: polymorphism! Let's say we don't want to just keep\ntrack of farmers and their livestock, but also their crops! Well, `SQLAlchemy` has us covered with its `__mapper_args__`\nmetadata and the `polymorphic` fields of that object!\n\nFor our purposes, we want one generic `Crop` model that keeps track of the type of crop, the maturity time, and how many\nacres a farmer has of that crop.\n<Tabs>\n  <TabItem value=\"image\" label=\"Image\" default>\n    ![Crop Image](./assets/farmer_chick_crops.png)\n  </TabItem>\n  <TabItem value=\"code\" label=\"Code\">\n    ```python\n    class Crop(BaseModel):\n        farmer_id: Mapped[int] = mapped_column(\n            Integer, ForeignKey(\"farmer.id\", ondelete=\"CASCADE\"), nullable=False,\n        )\n        type: Mapped[str] = mapped_column(\n            String, nullable=False,\n        )\n        days_to_mature: Mapped[int] = mapped_column(\n            Integer, nullable=False,\n        )\n        acres: Mapped[float] = mapped_column(\n            Float, nullable=False,\n        )\n\n        # --- METADATA ---\n        __mapper_args__ = {\n            \"polymorphic_identity\": \"crop\",\n            \"polymorphic_on\": \"type\",\n        }\n\n\n    class Cucumber(Crop):\n        id: Mapped[int] = mapped_column(\n            Integer, ForeignKey(\"crop.id\", ondelete=\"CASCADE\"), primary_key=True,\n        )\n        for_pickling: Mapped[bool] = mapped_column(\n            Boolean, default=False, nullable=False,\n        )\n\n        # --- METADATA ---\n        __mapper_args__ = {\"polymorphic_identity\": \"cucumber\"}\n\n\n    class Tomato(Crop):\n        id: Mapped[int] = mapped_column(\n            Integer, ForeignKey(\"crop.id\", ondelete=\"CASCADE\"), primary_key=True,\n        )\n        diameter: Mapped[float] = mapped_column(\n            Float, nullable=False,\n        )\n\n        # --- METADATA ---\n        __mapper_args__ = {\"polymorphic_identity\": \"tomato\"}\n    ```\n  </TabItem>\n\n\n</Tabs>\nNow, we also want to move all of our schema declarations into their own `schemas` module. After doing that, we create\nthe `CucumberSchema` and `TomatoSchema` as normal:\n\n```python\nCucumberSchema = Cucumber.make_schema()\nTomatoSchema = Tomato.make_schema()\n```\n\nEverything is looking good, but there is trouble on the horizon. If we look at the generated schema for the `Farmer`,\nsomething is off. The `crops` field says it is a list of `CropSchemas`, but this is only partially true. Ideally, the\n`crops` field should be a list of either `TomatoSchemas` or `CucumberSchemas`.\n\n## The Magic of OneOfSchema\n\nThankfully, there is already an extension to help us solve this problem; itroducing [`marshmallow_oneofschema`](https://github.com/marshmallow-code/marshmallow-oneofschema)!\n\n### Polymorphism II: Even DRYer\n\nTo use the `OneOfSchema` class for our `CropSchema`, we just have to do the following:\n\n```python\nclass CropSchema(OneOfSchema):\n    type_schemas: Dict[str, str] = {\n        \"cucumber\": CucumberSchema,\n        \"tomato\": TomatoSchema,\n    }\n\n    type_field_remove = False\n\n    def get_obj_type(self, obj: Crop):\n        return obj.type\n```\n\nThe `type_schemas` property is a mapping of the `type` field of a given `Crop` to which schema it should use when\nserializing or deserializing. It's that simple! Unfortunately, this has one drawback when implementing into our given\nstack: `make_schema()` does not know of `CropSchema's` existence. When creating the `FarmerSchema`, it will deduce the\nclass of the `crops` field, which is `Crop`, and then it will call `Crop.make_schema()` to get the nested schema.\n\nThis is no good! What can we do to fix this? Overrides.\n\n```python\nclass BaseModel(db.Model):\n    ... # same as before\n    @classmethod\n    def make_schema(cls, overrides: Optional[Dict[str, fields.Field]] = None) -> type(SQLAlchemyAutoSchema):\n        ... # same as before\n\n        for attr_name in cls.__dict__:\n            if attr_name in overrides:\n                schema_kwargs[attr_name] = overrides[attr_name]\n            elif (prop := cls.get_relationship(attr_name)) is not None:\n                cls.nest_attribute(attr_name, prop, schema_kwargs)\n            elif (enum_class := cls.get_enum(attr_name)) is not None:\n                cls.enum_attribute(attr_name, enum_class, schema_kwargs)\n\n        cls.__schema__ = type(schema_name, (SQLAlchemyAutoSchema,), schema_kwargs)\n        return cls.__schema__\n```\n\nThis way, when we create the `FarmerSchema`, we can tell it specifically to use the polymorphic `CropSchema` for the\n`crops` field.\n\n```python\nFarmerSchema = Farmer.make_schema(\n    overrides={\"crops\": fields.Nested(CropSchema(), many=True)}\n)\n```\n\nNow, when we call our endpoint, we get:\n\n```js\n{\n  \"chickens\": [\n    {\n      \"age\": 3,\n      \"created_at\": \"2023-12-12T18:17:53\",\n      \"id\": 1,\n      \"sex\": \"MALE\",\n      \"updated_at\": \"2023-12-12T18:17:53\"\n    },\n    {\n      \"age\": 2,\n      \"created_at\": \"2023-12-12T18:46:30\",\n      \"id\": 2,\n      \"sex\": \"FEMALE\",\n      \"updated_at\": \"2023-12-12T18:46:30\"\n    }\n  ],\n  \"created_at\": \"2023-12-12T15:51:00\",\n  \"crops\": [\n    {\n      \"acres\": 1,\n      \"created_at\": \"2023-12-12T20:21:32\",\n      \"days_to_mature\": 60,\n      \"for_pickling\": true,\n      \"id\": 1,\n      \"type\": \"cucumber\",\n      \"updated_at\": \"2023-12-12T20:21:32\"\n    },\n    {\n      \"acres\": 0.5,\n      \"created_at\": \"2023-12-12T20:22:07\",\n      \"days_to_mature\": 80,\n      \"diameter\": 3,\n      \"id\": 2,\n      \"type\": \"tomato\",\n      \"updated_at\": \"2023-12-12T20:22:07\"\n    }\n  ],\n  \"id\": 1,\n  \"name\": \"Old MacDonald\",\n  \"updated_at\": \"2023-12-12T15:51:00\"\n}\n```\n\nBeautiful and dry! Like a sunny day! ☀️\n\n## Mechanics (AKA Auto-Docs)\n\nA fantastic feature of APIFlask is that it conforms to the OpenAPI spec with its routes and schemas. This means we've\nactually been documenting our APIs the whole time as we write them! Here are the docs:\n\n<iframe\n        id=\"apiflask-docs\"\n        title=\"APIFLask Docs\"\n        src=\"https://dry-apiflask-demo-r5uz5svela-uc.a.run.app/docs#/\"\n        width=\"100%\"\n        height=\"500px\"\n>\n</iframe>\n\n\n### The First 90%\n\nIf you look around the auto generated docs, you'll see the routes that we made, as well as the schemas that are in use.\nOne quick change I'd suggest is to try out all the different UIs available for the docs site. You can update this by\nsetting the `docs_ui` key-word argument in the `APIFlask` constructor like so:\n\n```python\nAPIFlask(__name__, title=\"DRY API\", version=\"1.0\", docs_ui=\"elements\")\n```\n\nDevelopers with sharp eyes may notice that the `Crop` schema doesn't have any information populated in our docs! This is\na problem.\n\n### The Last 10%\n\nThe final savior: [`apispec_oneofschema`](https://github.com/timakro/apispec-oneofschema), a companion to `marshmallow_oneofschema`. This plugin allows us to generate\ndocumentation for our `OneOfSchema` schemas. Let's set it up now!\n\nIt's as simple as changing this:\n\n```python\napp = APIFlask(__name__, title=\"DRY API\", version=\"1.0\", docs_ui=\"elements\")\n```\n\nTo this:\n\n```python\napp = APIFlask(__name__, title=\"DRY API\", version=\"1.0\", docs_ui=\"elements\", spec_plugins=[MarshmallowPlugin()])\n```\n\n### The last 1%\n\nLastly, the `oneOf` dropdown for most of the UIs just says `object` for each option, which isn't great. From what I can\ntell, most of the UIs use the `title` field of a schema to populate the name, so we can create our own plugin to add\nthat field for each of our schemas:\n\n```python\nfrom apispec.ext import marshmallow\n\n\nclass OpenAPITitleAppender(marshmallow.OpenAPIConverter):\n    def schema2jsonschema(self, schema):\n        json_schema = super(OpenAPITitleAppender, self).schema2jsonschema(schema)\n        schema_name = schema.__class__.__name__\n        if schema_name.endswith('Schema'):\n            schema_name = schema_name[:-len('Schema')]\n        json_schema[\"title\"] = schema_name\n        return json_schema\n\n\nclass TitlesPlugin(marshmallow.MarshmallowPlugin):\n    Converter = OpenAPITitleAppender\n```\n\nAnd then we just have to add it to our `APIFlask` app!\n\n```python\napp = APIFlask(\n    __name__,\n    title=\"DRY API\",\n    version=\"1.0\",\n    docs_ui=\"elements\",\n    spec_plugins=[MarshmallowPlugin(), TitlesPlugin()]\n)\n```"}],"blogListPaginated":[{"items":["llm_extensibility","dry_with_apiflask"],"metadata":{"permalink":"/blog","page":1,"postsPerPage":10,"totalPages":1,"totalCount":2,"blogDescription":"Blog","blogTitle":"Blog"}}],"blogTags":{"/blog/tags/llm-extensibility":{"inline":true,"label":"LLM Extensibility","permalink":"/blog/tags/llm-extensibility","items":["llm_extensibility"],"pages":[{"items":["llm_extensibility"],"metadata":{"permalink":"/blog/tags/llm-extensibility","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/blog/tags/dry":{"inline":true,"label":"DRY","permalink":"/blog/tags/dry","items":["dry_with_apiflask"],"pages":[{"items":["dry_with_apiflask"],"metadata":{"permalink":"/blog/tags/dry","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/blog/tags/api-flask":{"inline":true,"label":"APIFlask","permalink":"/blog/tags/api-flask","items":["dry_with_apiflask"],"pages":[{"items":["dry_with_apiflask"],"metadata":{"permalink":"/blog/tags/api-flask","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/blog/tags/sql-alchemy":{"inline":true,"label":"SQLAlchemy","permalink":"/blog/tags/sql-alchemy","items":["dry_with_apiflask"],"pages":[{"items":["dry_with_apiflask"],"metadata":{"permalink":"/blog/tags/sql-alchemy","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/blog/tags/marshmallow":{"inline":true,"label":"Marshmallow","permalink":"/blog/tags/marshmallow","items":["dry_with_apiflask"],"pages":[{"items":["dry_with_apiflask"],"metadata":{"permalink":"/blog/tags/marshmallow","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/blog/tags/one-of-schema":{"inline":true,"label":"OneOfSchema","permalink":"/blog/tags/one-of-schema","items":["dry_with_apiflask"],"pages":[{"items":["dry_with_apiflask"],"metadata":{"permalink":"/blog/tags/one-of-schema","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false}},"blogTagsListPath":"/blog/tags","authorsMap":{"aham":{"name":"Andrew Hamilton","title":"Co-Founder and CTO @ Layer","url":"https://github.com/andrewlayer","imageURL":"https://avatars.githubusercontent.com/u/135887157?v=4","key":"aham","page":null},"gpart":{"name":"Gavyn Partlow","title":"Software Engineer @ Layer","url":"https://github.com/GavynWithLayer","imageURL":"https://avatars.githubusercontent.com/u/151399782?v=4","key":"gpart","page":null},"lgis":{"name":"Lucas Gismondi","title":"Software Engineer @ Layer","url":"https://github.com/lucasgismondi-gg","imageURL":"https://avatars.githubusercontent.com/u/121511329?v=4","key":"lgis","page":null},"agill":{"name":"Ayaan Gill","title":"UX Engineer @ Layer","url":"https://github.com/ayaanglayer","imageURL":"https://avatars.githubusercontent.com/u/165331764?s=400&u=f48ff3e02dbe6b55351f2281b482cdaa96e0808c&v=4","key":"agill","page":null},"jkatz":{"name":"Jonah Katz","title":"Co-Founder and CEO @ Layer","url":"https://www.linkedin.com/in/jonahkatz1/","imageURL":"https://media.licdn.com/dms/image/v2/D5603AQGcdwug9LunVA/profile-displayphoto-shrink_400_400/profile-displayphoto-shrink_400_400/0/1727827703156?e=1743638400&v=beta&t=S4adBtUI5ELMYeuV-xjKvHl5lB8k6IaQ6T6gXhVvuuk","key":"jkatz","page":null}}}},"docusaurus-plugin-content-pages":{"default":[]},"docusaurus-plugin-debug":{},"docusaurus-plugin-svgr":{},"docusaurus-plugin-redoc":{"plugin-redoc-0":{"converted":{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/admin/token":{"post":{"tags":["admin"],"summary":"Login","operationId":"admin_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_admin_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/customers":{"get":{"tags":["admin"],"summary":"Get All Customers","operationId":"admin_get_all_customers_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Customer"},"type":"array","title":"Response Admin Get All Customers Get"}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["admin"],"summary":"Create Customer","operationId":"admin_create_customer_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreateAdmin"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/customers/hash/{customer_id}":{"get":{"tags":["admin"],"summary":"Get Customer Hashed Id","operationId":"admin_get_customer_hashed_id_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerHashedId"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/customers/{customer_id}":{"get":{"tags":["admin"],"summary":"Get Customer","operationId":"admin_get_customer_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["admin"],"summary":"Update Customer","operationId":"admin_update_customer_patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerUpdateAdmin"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["admin"],"summary":"Delete Customer","operationId":"admin_delete_customer_delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/customers/{customer_id}/firebase_token":{"get":{"tags":["admin"],"summary":"Get Customer Firebase Token","operationId":"admin_get_customer_firebase_token_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/extensions":{"get":{"tags":["admin"],"summary":"Get All Extensions","operationId":"admin_get_all_extensions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Extension"},"type":"array","title":"Response Admin Get All Extensions Get"}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/extensions/{extension_id}/download/{special_object_name}":{"get":{"tags":["admin"],"summary":"Download Extension Object","operationId":"admin_download_extension_object_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}},{"name":"special_object_name","in":"path","required":true,"schema":{"type":"string","title":"Special Object Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/octet-stream":{"schema":{"type":"string"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/message_logs":{"get":{"tags":["admin"],"summary":"Get All Message Logs","operationId":"admin_get_all_message_logs_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/MessageLog"},"type":"array","title":"Response Admin Get All Message Logs Get"}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/sync":{"get":{"tags":["admin"],"summary":"Sync Outdated Sources","operationId":"admin_sync_outdated_sources_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/chat/vscode":{"post":{"tags":["chat"],"summary":"Vscode Completion","operationId":"chat_vscode_completion_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/VSCodeCompletionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PromptResponse"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/completion":{"post":{"tags":["chat"],"summary":"Get Completion","operationId":"chat_get_completion_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompletionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompletionResponse"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/search":{"post":{"tags":["chat"],"summary":"Search","operationId":"chat_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponse"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/completion/stream":{"post":{"tags":["chat"],"summary":"Stream Completion","operationId":"chat_stream_completion_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StreamedCompletionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/copilot/{api_key}":{"post":{"tags":["chat"],"summary":"Copilot Endpoint","operationId":"chat_copilot_endpoint_post","parameters":[{"name":"api_key","in":"path","required":true,"schema":{"type":"string","title":"Api Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chat/message_logs":{"get":{"tags":["chat"],"summary":"Get Message Logs","operationId":"chat_get_message_logs_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/MessageLog"},"type":"array","title":"Response Chat Get Message Logs Get"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/collections/":{"get":{"tags":["collections"],"summary":"Get All Collections","operationId":"collections_get_all_collections_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Collection"},"type":"array","title":"Response Collections Get All Collections Get"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/collections/{collection_id}":{"get":{"tags":["collections"],"summary":"Get Collection","operationId":"collections_get_collection_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"collection_id","in":"path","required":true,"schema":{"type":"integer","title":"Collection Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Collection"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crawls/site":{"get":{"tags":["crawls"],"summary":"Get Crawl Site Job Ids","operationId":"crawls_get_crawl_site_job_ids_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlJobKeys"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"post":{"tags":["crawls"],"summary":"Crawl Website","operationId":"crawls_crawl_website_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlSiteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/crawls/site/{job_key}":{"get":{"tags":["crawls"],"summary":"Get Crawl Site Progress","operationId":"crawls_get_crawl_site_progress_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"job_key","in":"path","required":true,"schema":{"type":"string","title":"Job Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlSiteProgress"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["crawls"],"summary":"Clear Crawl","operationId":"crawls_clear_crawl_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"job_key","in":"path","required":true,"schema":{"type":"string","title":"Job Key"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crawls/github":{"post":{"tags":["crawls"],"summary":"Crawl Github","operationId":"crawls_crawl_github_post","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"token","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlGitHubRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlGitHubResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/":{"get":{"tags":["customers"],"summary":"Get Customer","operationId":"customers_get_customer_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"post":{"tags":["customers"],"summary":"Create Customer","operationId":"customers_create_customer_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]}]}},"/customers/transferring/{customer_hash}":{"get":{"tags":["customers"],"summary":"Get Customer Transferring","operationId":"customers_get_customer_transferring_get","parameters":[{"name":"customer_hash","in":"path","required":true,"schema":{"type":"string","title":"Customer Hash"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/{customer_hash}":{"patch":{"tags":["customers"],"summary":"Update Customer Email","operationId":"customers_update_customer_email_patch","security":[{"Firebase Token":[]}],"parameters":[{"name":"customer_hash","in":"path","required":true,"schema":{"type":"string","title":"Customer Hash"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/name/{company_name}":{"get":{"tags":["customers"],"summary":"Check Name Availability","operationId":"customers_check_name_availability_get","parameters":[{"name":"company_name","in":"path","required":true,"schema":{"type":"string","title":"Company Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NameCheck"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/embeds/":{"get":{"tags":["embeds"],"summary":"Get Embed Job Progress","operationId":"embeds_get_embed_job_progress_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedJobsProgress"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/extensions/":{"get":{"tags":["extensions"],"summary":"Get Extensions","operationId":"extensions_get_extensions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Extension"},"type":"array","title":"Response Extensions Get Extensions Get"}}}},"404":{"description":"Not found"}},"security":[{"Layer API Key":[]}]}},"/extensions/{extension_id}":{"put":{"tags":["extensions"],"summary":"Update Extension","operationId":"extensions_update_extension_put","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}}],"requestBody":{"required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/ExtensionUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Extension"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["extensions"],"summary":"Delete Extension","operationId":"extensions_delete_extension_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extensions/{extension_id}/publish/{template_name}":{"get":{"tags":["extensions"],"summary":"Publish Extension","operationId":"extensions_publish_extension_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}},{"name":"template_name","in":"path","required":true,"schema":{"type":"string","title":"Template Name"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extensions/{extension_id}/download/{special_object_name}":{"get":{"tags":["extensions"],"summary":"Download Object","operationId":"extensions_download_object_get","security":[{"Layer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}},{"name":"special_object_name","in":"path","required":true,"schema":{"type":"string","title":"Special Object Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/octet-stream":{"schema":{"type":"string"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extensions/templates":{"get":{"tags":["extensions"],"summary":"List Templates","operationId":"extensions_list_templates_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtensionTemplateOptions"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/health/":{"get":{"tags":["health"],"summary":"All Checks","operationId":"health_all_checks_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/health/database":{"get":{"tags":["health"],"summary":"Database Check","operationId":"health_database_check_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/health/marketplace":{"get":{"tags":["health"],"summary":"Marketplace Check","operationId":"health_marketplace_check_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/health/storage":{"get":{"tags":["health"],"summary":"Storage Check","operationId":"health_storage_check_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/rag_config/":{"get":{"tags":["rag config"],"summary":"Get Rag Configuration","operationId":"rag config_get_rag_configuration_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RAGConfiguration"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"put":{"tags":["rag config"],"summary":"Update Rag Configuration","operationId":"rag config_update_rag_configuration_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RAGConfigurationUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RAGConfiguration"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/":{"get":{"tags":["sources"],"summary":"Get Sources","operationId":"sources_get_sources_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"anyOf":[{"$ref":"#/components/schemas/DocumentSource"},{"$ref":"#/components/schemas/SuggestionSource"},{"$ref":"#/components/schemas/WebsiteSource"}]},"type":"array","title":"Response Sources Get Sources Get"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/{source_id}":{"get":{"tags":["sources"],"summary":"Get Source","operationId":"sources_get_source_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/DocumentSource"},{"$ref":"#/components/schemas/SuggestionSource"},{"$ref":"#/components/schemas/WebsiteSource"}],"title":"Response Sources Get Source Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["sources"],"summary":"Delete Source","operationId":"sources_delete_source_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/document/types":{"get":{"tags":["sources"],"summary":"Get Supported Types","operationId":"sources_get_supported_types_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSourceSupportedTypes"}}}},"404":{"description":"Not found"}}}},"/sources/embeddings/{source_id}":{"get":{"tags":["sources"],"summary":"Get Embeddings","operationId":"sources_get_embeddings_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SourceEmbedding"},"title":"Response Sources Get Embeddings Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/document":{"post":{"tags":["sources"],"summary":"Create Document Source","operationId":"sources_create_document_source_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/DocumentSourceCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/suggestion":{"post":{"tags":["sources"],"summary":"Create Suggestion Source","operationId":"sources_create_suggestion_source_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSourceCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/website":{"post":{"tags":["sources"],"summary":"Create Website Sources","operationId":"sources_create_website_sources_post","requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/WebsiteSourceCreate"},"type":"array","title":"Sources"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedJobKeys"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/github":{"post":{"tags":["sources"],"summary":"Create Github Sources","operationId":"sources_create_github_sources_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitHubSourcesCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedJobKeys"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/llms":{"post":{"tags":["sources"],"summary":"Create Sources From Llms Txt","operationId":"sources_create_sources_from_llms_txt_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/DocumentSourceCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SimpleDocumentSourceCreate"},"type":"array","title":"Response Sources Create Sources From Llms Txt Post"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/document/{source_id}":{"patch":{"tags":["sources"],"summary":"Update Document Source","operationId":"sources_update_document_source_patch","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"requestBody":{"required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/DocumentSourceUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/suggestion/{source_id}":{"patch":{"tags":["sources"],"summary":"Update Suggestion Source","operationId":"sources_update_suggestion_source_patch","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSourceUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/website/sync/{source_id}":{"get":{"tags":["sources"],"summary":"Sync Website Source","operationId":"sources_sync_website_source_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["sources"],"summary":"Clear Sync Website Status","operationId":"sources_clear_sync_website_status_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/website/sync":{"post":{"tags":["sources"],"summary":"Sync Multi Website Sources","operationId":"sources_sync_multi_website_sources_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncMultiSiteRequest"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/website/sync/{source_id}/status":{"get":{"tags":["sources"],"summary":"Get Sync Website Status","operationId":"sources_get_sync_website_status_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncSiteStatus"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/website/sync/status":{"post":{"tags":["sources"],"summary":"Get Multi Sync Website Status","operationId":"sources_get_multi_sync_website_status_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncMultiSiteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncMultiSiteStatus"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/delete":{"post":{"tags":["sources"],"summary":"Delete Sources","operationId":"sources_delete_sources_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteSources"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tasks/crawl_site":{"post":{"tags":["tasks"],"summary":"Crawl Site","operationId":"tasks_crawl_site_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlSiteMessage"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tasks/embed_site":{"post":{"tags":["tasks"],"summary":"Embed Site","operationId":"tasks_embed_site_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedMultiSiteMessage"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tasks/embed_github":{"post":{"tags":["tasks"],"summary":"Embed Github","operationId":"tasks_embed_github_post","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"token","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedGitHubMessage"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/sync_site":{"post":{"tags":["tasks"],"summary":"Sync Site","operationId":"tasks_sync_site_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncSiteMessage"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tools/":{"get":{"tags":["tools"],"summary":"Get Tools","operationId":"tools_get_tools_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Tool"},"type":"array","title":"Response Tools Get Tools Get"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"post":{"tags":["tools"],"summary":"Create Tool","operationId":"tools_create_tool_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tool"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tools/{tool_id}":{"get":{"tags":["tools"],"summary":"Get Tool","operationId":"tools_get_tool_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tool"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["tools"],"summary":"Update Tool","operationId":"tools_update_tool_patch","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tool"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["tools"],"summary":"Delete Tool","operationId":"tools_delete_tool_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tools/call":{"post":{"tags":["tools"],"summary":"Call Tool","operationId":"tools_call_tool_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolCall"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolMessage"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/tools/call/{tool_id}":{"post":{"tags":["tools"],"summary":"Call Tool By Id","operationId":"tools_call_tool_by_id_post","security":[{"Layer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolCall"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolMessage"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tools/convert_openapi":{"post":{"tags":["tools"],"summary":"Convert Openapi To Tool Call","operationId":"tools_convert_openapi_to_tool_call_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_tools_convert_openapi_to_tool_call_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/web_widgets/":{"get":{"tags":["web_widgets"],"summary":"Get Web Widgets","operationId":"web_widgets_get_web_widgets_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/WebWidget"},"type":"array","title":"Response Web Widgets Get Web Widgets Get"}}}},"404":{"description":"Not found"}},"security":[{"Layer API Key":[]}]}},"/web_widgets/{web_widget_id}":{"put":{"tags":["web_widgets"],"summary":"Update Widget","operationId":"web_widgets_update_widget_put","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"web_widget_id","in":"path","required":true,"schema":{"type":"integer","title":"Web Widget Id"}}],"requestBody":{"required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/WebWidgetUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebWidget"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/web_widgets/{web_widget_id}/download-logo":{"get":{"tags":["web_widgets"],"summary":"Download Logo","operationId":"web_widgets_download_logo_get","security":[{"Layer API Key":[]}],"parameters":[{"name":"web_widget_id","in":"path","required":true,"schema":{"type":"integer","title":"Web Widget Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/octet-stream":{"schema":{"type":"string"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Root","operationId":"root_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Body_admin_login_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"password"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_admin_login_post"},"Body_tools_convert_openapi_to_tool_call_post":{"properties":{"file":{"type":"string","format":"binary","title":"File","description":"OpenAPI spec file"}},"type":"object","required":["file"],"title":"Body_tools_convert_openapi_to_tool_call_post"},"Citation":{"properties":{"name":{"type":"string","title":"Name"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"}},"type":"object","required":["name"],"title":"Citation"},"CitationExtended":{"properties":{"name":{"type":"string","title":"Name"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"type":{"type":"string","title":"Type"}},"type":"object","required":["name","type"],"title":"CitationExtended"},"Collection":{"properties":{"name":{"$ref":"#/components/schemas/CollectionName"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"id":{"type":"integer","title":"Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["name","description","id","customer_id"],"title":"Collection"},"CollectionName":{"type":"string","enum":["Main","Suggestions","Code"],"title":"CollectionName"},"CompletionRequest":{"properties":{"query":{"type":"string","title":"Query"},"history":{"anyOf":[{"items":{"anyOf":[{"$ref":"#/components/schemas/Message"},{"$ref":"#/components/schemas/ToolMessage"}]},"type":"array"},{"type":"null"}],"title":"History"},"references":{"anyOf":[{"items":{"$ref":"#/components/schemas/Reference"},"type":"array"},{"type":"null"}],"title":"References"},"token_limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Token Limit"}},"type":"object","required":["query"],"title":"CompletionRequest"},"CompletionResponse":{"properties":{"message":{"type":"string","title":"Message"},"citations":{"items":{"$ref":"#/components/schemas/Citation"},"type":"array","title":"Citations"},"tool_calls":{"items":{"$ref":"#/components/schemas/ToolCall"},"type":"array","title":"Tool Calls"}},"type":"object","required":["message","citations","tool_calls"],"title":"CompletionResponse"},"CrawlGitHubRequest":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"}},"type":"object","required":["url"],"title":"CrawlGitHubRequest"},"CrawlGitHubResponse":{"properties":{"file_paths":{"items":{"type":"string"},"type":"array","title":"File Paths"}},"type":"object","required":["file_paths"],"title":"CrawlGitHubResponse"},"CrawlJobKeys":{"properties":{"job_keys":{"items":{"type":"string"},"type":"array","title":"Job Keys"}},"type":"object","required":["job_keys"],"title":"CrawlJobKeys"},"CrawlResponse":{"properties":{"job_key":{"type":"string","title":"Job Key"}},"type":"object","required":["job_key"],"title":"CrawlResponse"},"CrawlSiteMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"url_filters":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Url Filters"}},"type":"object","required":["job_key","customer_id","url"],"title":"CrawlSiteMessage"},"CrawlSiteProgress":{"properties":{"status":{"anyOf":[{"$ref":"#/components/schemas/CrawlSiteStatus"},{"type":"null"}]},"successful_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"Successful Urls"},"failed_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"Failed Urls"},"visited_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"Visited Urls"},"to_visit_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"To Visit Urls"}},"type":"object","required":["successful_urls","failed_urls","visited_urls","to_visit_urls"],"title":"CrawlSiteProgress"},"CrawlSiteRequest":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"url_filters":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Url Filters"}},"type":"object","required":["url"],"title":"CrawlSiteRequest"},"CrawlSiteStatus":{"type":"string","enum":["STARTED","CANCELED","DONE"],"title":"CrawlSiteStatus"},"Customer":{"properties":{"company_name":{"type":"string","title":"Company Name"},"id":{"type":"integer","title":"Id"},"email":{"type":"string","title":"Email"},"api_key":{"type":"string","title":"Api Key"},"customer_api_key":{"type":"string","title":"Customer Api Key"},"handing_off":{"type":"boolean","title":"Handing Off"}},"type":"object","required":["company_name","id","email","api_key","customer_api_key","handing_off"],"title":"Customer"},"CustomerCreate":{"properties":{"company_name":{"type":"string","title":"Company Name"}},"type":"object","required":["company_name"],"title":"CustomerCreate"},"CustomerCreateAdmin":{"properties":{"company_name":{"type":"string","title":"Company Name"},"email":{"type":"string","title":"Email"},"password":{"type":"string","title":"Password"}},"type":"object","required":["company_name","email","password"],"title":"CustomerCreateAdmin"},"CustomerHashedId":{"properties":{"hashed_id":{"type":"string","title":"Hashed Id"}},"type":"object","required":["hashed_id"],"title":"CustomerHashedId"},"CustomerUpdateAdmin":{"properties":{"company_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Company Name"},"email":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Email"},"api_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Api Key"},"customer_api_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Customer Api Key"},"handing_off":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Handing Off"}},"type":"object","title":"CustomerUpdateAdmin"},"DeleteSources":{"properties":{"ids":{"items":{"type":"integer"},"type":"array","title":"Ids"}},"type":"object","required":["ids"],"title":"DeleteSources"},"DocumentSource":{"properties":{"id":{"type":"integer","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"name":{"type":"string","title":"Name"},"customer_id":{"type":"integer","title":"Customer Id"},"type":{"type":"string","title":"Type"},"collection_id":{"type":"integer","title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"filename":{"type":"string","title":"Filename"},"extension":{"type":"string","title":"Extension"}},"type":"object","required":["id","created_at","updated_at","name","customer_id","type","collection_id","filename","extension"],"title":"DocumentSource"},"DocumentSourceCreate":{"properties":{"name":{"type":"string","title":"Name"},"file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"File"},"collection_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"}},"type":"object","required":["name"],"title":"DocumentSourceCreate"},"DocumentSourceSupportedTypes":{"properties":{"types":{"items":{"type":"string"},"type":"array","title":"Types"}},"type":"object","required":["types"],"title":"DocumentSourceSupportedTypes"},"DocumentSourceUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"File"}},"type":"object","title":"DocumentSourceUpdate"},"EmbedGitHubMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"},"owner":{"type":"string","title":"Owner"},"repo":{"type":"string","title":"Repo"},"file_path":{"type":"string","title":"File Path"}},"type":"object","required":["job_key","customer_id","owner","repo","file_path"],"title":"EmbedGitHubMessage"},"EmbedJobKeys":{"properties":{"job_keys":{"items":{"type":"string"},"type":"array","title":"Job Keys"}},"type":"object","required":["job_keys"],"title":"EmbedJobKeys"},"EmbedJobStatus":{"type":"string","enum":["QUEUED","STARTED","CANCELED","DONE"],"title":"EmbedJobStatus"},"EmbedJobsProgress":{"properties":{"status":{"anyOf":[{"$ref":"#/components/schemas/EmbedJobStatus"},{"type":"null"}]},"finished":{"type":"integer","title":"Finished"},"total":{"type":"integer","title":"Total"}},"type":"object","required":["finished","total"],"title":"EmbedJobsProgress"},"EmbedMultiSiteMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"sites":{"items":{"$ref":"#/components/schemas/EmbedSingleSiteMessage"},"type":"array","title":"Sites"}},"type":"object","required":["job_key","customer_id","sites"],"title":"EmbedMultiSiteMessage"},"EmbedSingleSiteMessage":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"collection_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Collection Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"}},"type":"object","required":["url"],"title":"EmbedSingleSiteMessage"},"Extension":{"properties":{"name":{"type":"string","title":"Name"},"participant_name":{"type":"string","title":"Participant Name"},"participant_description":{"type":"string","title":"Participant Description"},"display_name":{"type":"string","title":"Display Name"},"description":{"type":"string","title":"Description"},"id":{"type":"integer","title":"Id"},"owner":{"type":"integer","title":"Owner"},"logo_url":{"type":"string","minLength":1,"format":"uri","title":"Logo Url"},"readme_url":{"type":"string","minLength":1,"format":"uri","title":"Readme Url"},"pending_publish":{"type":"boolean","title":"Pending Publish"},"version":{"type":"string","title":"Version"},"marketplace_url":{"type":"string","minLength":1,"format":"uri","title":"Marketplace Url"}},"type":"object","required":["name","participant_name","participant_description","display_name","description","id","owner","logo_url","readme_url","pending_publish","version","marketplace_url"],"title":"Extension"},"ExtensionTemplateOptions":{"properties":{"template_names":{"items":{"type":"string"},"type":"array","title":"Template Names"}},"type":"object","required":["template_names"],"title":"ExtensionTemplateOptions"},"ExtensionUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"participant_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Participant Name"},"participant_description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Participant Description"},"display_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Display Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"logo_file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Logo File"},"readme_file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Readme File"}},"type":"object","title":"ExtensionUpdate"},"FunctionCall":{"properties":{"name":{"type":"string","title":"Name"},"arguments":{"type":"string","title":"Arguments"}},"type":"object","required":["name","arguments"],"title":"FunctionCall"},"GitHubSourcesCreate":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"},"file_paths":{"items":{"type":"string"},"type":"array","title":"File Paths"}},"type":"object","required":["url","file_paths"],"title":"GitHubSourcesCreate"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Health":{"properties":{"status":{"type":"string","title":"Status"}},"type":"object","required":["status"],"title":"Health"},"JSONSchemaObject":{"properties":{"type":{"type":"string","enum":["object"],"const":"object","title":"Type","default":"object"},"properties":{"type":"object","title":"Properties"},"required":{"items":{"type":"string"},"type":"array","title":"Required"},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":false}},"type":"object","required":["properties"],"title":"JSONSchemaObject"},"Message":{"properties":{"role":{"$ref":"#/components/schemas/MessageRole"},"content":{"type":"string","title":"Content"},"tool_calls":{"anyOf":[{"items":{"$ref":"#/components/schemas/ToolCall"},"type":"array"},{"type":"null"}],"title":"Tool Calls"}},"type":"object","required":["role","content"],"title":"Message"},"MessageExtended":{"properties":{"role":{"$ref":"#/components/schemas/MessageRole"},"content":{"type":"string","title":"Content"},"tool_calls":{"anyOf":[{"items":{"$ref":"#/components/schemas/ToolCall"},"type":"array"},{"type":"null"}],"title":"Tool Calls"},"citation":{"anyOf":[{"$ref":"#/components/schemas/Citation"},{"type":"null"}]},"reference":{"anyOf":[{"$ref":"#/components/schemas/Reference"},{"type":"null"}]}},"type":"object","required":["role","content"],"title":"MessageExtended"},"MessageLog":{"properties":{"message":{"type":"string","title":"Message"},"ip":{"type":"string","format":"ipvanyaddress","title":"Ip"},"id":{"type":"integer","title":"Id"},"customer_id":{"type":"integer","title":"Customer Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"}},"type":"object","required":["message","ip","id","customer_id","created_at"],"title":"MessageLog"},"MessageRole":{"type":"string","enum":["assistant","user","system","tool"],"title":"MessageRole"},"MethodType":{"type":"string","enum":["GET","PATCH","POST","PUT","DELETE"],"title":"MethodType"},"NameCheck":{"properties":{"available":{"type":"boolean","title":"Available"}},"type":"object","required":["available"],"title":"NameCheck"},"PromptResponse":{"properties":{"messages":{"items":{"$ref":"#/components/schemas/MessageExtended"},"type":"array","title":"Messages"}},"type":"object","required":["messages"],"title":"PromptResponse"},"RAGConfiguration":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"system_prompt":{"type":"string","title":"System Prompt"}},"type":"object","required":["customer_id","system_prompt"],"title":"RAGConfiguration"},"RAGConfigurationUpdate":{"properties":{"system_prompt":{"type":"string","title":"System Prompt"}},"type":"object","required":["system_prompt"],"title":"RAGConfigurationUpdate"},"Reference":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"value":{"type":"string","title":"Value"}},"type":"object","required":["id","name","value"],"title":"Reference"},"SearchRequest":{"properties":{"query":{"type":"string","title":"Query"},"top_n":{"type":"integer","title":"Top N","default":3}},"type":"object","required":["query"],"title":"SearchRequest"},"SearchResponse":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/CitationExtended"},"type":"array","title":"Sources"}},"type":"object","required":["sources"],"title":"SearchResponse"},"SimpleDocumentSourceCreate":{"properties":{"name":{"type":"string","title":"Name"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"}},"type":"object","required":["name","url"],"title":"SimpleDocumentSourceCreate"},"SourceEmbedding":{"properties":{"id":{"type":"integer","title":"Id"},"source_id":{"type":"integer","title":"Source Id"},"embedding":{"items":{"type":"number"},"type":"array","title":"Embedding"},"document":{"type":"string","title":"Document"},"prev_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Prev Id"}},"type":"object","required":["id","source_id","embedding","document"],"title":"SourceEmbedding"},"StreamedCompletionRequest":{"properties":{"query":{"type":"string","title":"Query"},"history":{"anyOf":[{"items":{"anyOf":[{"$ref":"#/components/schemas/Message"},{"$ref":"#/components/schemas/ToolMessage"}]},"type":"array"},{"type":"null"}],"title":"History"},"references":{"anyOf":[{"items":{"$ref":"#/components/schemas/Reference"},"type":"array"},{"type":"null"}],"title":"References"},"token_limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Token Limit"},"sources":{"items":{"$ref":"#/components/schemas/CitationExtended"},"type":"array","title":"Sources"}},"type":"object","required":["query","sources"],"title":"StreamedCompletionRequest"},"SuggestionSource":{"properties":{"id":{"type":"integer","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"name":{"type":"string","title":"Name"},"customer_id":{"type":"integer","title":"Customer Id"},"type":{"type":"string","title":"Type"},"collection_id":{"type":"integer","title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"question":{"type":"string","title":"Question"},"answer":{"type":"string","title":"Answer"}},"type":"object","required":["id","created_at","updated_at","name","customer_id","type","collection_id","question","answer"],"title":"SuggestionSource"},"SuggestionSourceCreate":{"properties":{"name":{"type":"string","title":"Name"},"question":{"type":"string","title":"Question"},"answer":{"type":"string","title":"Answer"}},"type":"object","required":["name","question","answer"],"title":"SuggestionSourceCreate"},"SuggestionSourceUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"question":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Question"},"answer":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Answer"}},"type":"object","title":"SuggestionSourceUpdate"},"SyncMultiSiteRequest":{"properties":{"ids":{"items":{"type":"integer"},"type":"array","title":"Ids"}},"type":"object","required":["ids"],"title":"SyncMultiSiteRequest"},"SyncMultiSiteStatus":{"properties":{"statuses":{"additionalProperties":{"anyOf":[{"$ref":"#/components/schemas/SyncStatus"},{"type":"null"}]},"type":"object","title":"Statuses"}},"type":"object","required":["statuses"],"title":"SyncMultiSiteStatus"},"SyncSiteMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"source_id":{"type":"integer","title":"Source Id"}},"type":"object","required":["job_key","customer_id","source_id"],"title":"SyncSiteMessage"},"SyncSiteStatus":{"properties":{"status":{"anyOf":[{"$ref":"#/components/schemas/SyncStatus"},{"type":"null"}]}},"type":"object","title":"SyncSiteStatus"},"SyncStatus":{"type":"string","enum":["QUEUED","STARTED","DONE"],"title":"SyncStatus"},"Token":{"properties":{"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type"}},"type":"object","required":["access_token","token_type"],"title":"Token"},"Tool":{"properties":{"name":{"type":"string","maxLength":64,"pattern":"^[a-zA-Z0-9_-]+$","title":"Name"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"description":{"type":"string","title":"Description"},"method":{"$ref":"#/components/schemas/MethodType"},"parameters":{"anyOf":[{"$ref":"#/components/schemas/ToolArgumentsParameters-Output"},{"type":"null"}]},"strict":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Strict"},"id":{"type":"integer","title":"Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["name","url","description","method","id","customer_id"],"title":"Tool"},"ToolArgumentsParameters-Input":{"properties":{"type":{"type":"string","enum":["object"],"const":"object","title":"Type","default":"object"},"properties":{"$ref":"#/components/schemas/ToolArgumentsProperties"},"required":{"items":{"type":"string"},"type":"array","title":"Required"},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":false}},"type":"object","required":["properties"],"title":"ToolArgumentsParameters"},"ToolArgumentsParameters-Output":{"properties":{"type":{"type":"string","enum":["object"],"const":"object","title":"Type","default":"object"},"properties":{"$ref":"#/components/schemas/ToolArgumentsProperties"},"required":{"items":{"type":"string"},"type":"array","title":"Required"},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":false}},"type":"object","required":["properties"],"title":"ToolArgumentsParameters"},"ToolArgumentsProperties":{"properties":{"path":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]},"query":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]},"body":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]},"auth":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]}},"type":"object","title":"ToolArgumentsProperties"},"ToolCall":{"properties":{"id":{"type":"string","title":"Id"},"type":{"type":"string","enum":["function"],"const":"function","title":"Type","default":"function"},"function":{"$ref":"#/components/schemas/FunctionCall"}},"type":"object","required":["id","function"],"title":"ToolCall"},"ToolCreate":{"properties":{"name":{"type":"string","maxLength":64,"pattern":"^[a-zA-Z0-9_-]+$","title":"Name"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"description":{"type":"string","title":"Description"},"method":{"$ref":"#/components/schemas/MethodType"},"parameters":{"anyOf":[{"$ref":"#/components/schemas/ToolArgumentsParameters-Input"},{"type":"null"}]},"strict":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Strict"}},"type":"object","required":["name","url","description","method"],"title":"ToolCreate"},"ToolMessage":{"properties":{"role":{"type":"string","enum":["tool"],"const":"tool","title":"Role","default":"tool"},"content":{"type":"string","title":"Content"},"tool_call_id":{"type":"string","title":"Tool Call Id"}},"type":"object","required":["content","tool_call_id"],"title":"ToolMessage"},"ToolUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"method":{"anyOf":[{"$ref":"#/components/schemas/MethodType"},{"type":"null"}]},"parameters":{"anyOf":[{"$ref":"#/components/schemas/ToolArgumentsParameters-Input"},{"type":"null"}]},"strict":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Strict"}},"type":"object","title":"ToolUpdate"},"VSCodeCompletionRequest":{"properties":{"query":{"type":"string","title":"Query"},"history":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"History"},"references":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"References"},"token_limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Token Limit"},"files":{"anyOf":[{"items":{"type":"string","format":"binary"},"type":"array"},{"type":"null"}],"title":"Files"}},"type":"object","required":["query"],"title":"VSCodeCompletionRequest"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WebWidget":{"properties":{"product_name":{"type":"string","title":"Product Name"},"primary_color":{"type":"string","title":"Primary Color"},"id":{"type":"integer","title":"Id"},"owner":{"type":"integer","title":"Owner"},"logo_url":{"type":"string","minLength":1,"format":"uri","title":"Logo Url"}},"type":"object","required":["product_name","primary_color","id","owner","logo_url"],"title":"WebWidget"},"WebWidgetUpdate":{"properties":{"product_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Product Name"},"primary_color":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Primary Color"},"logo_file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Logo File"}},"type":"object","title":"WebWidgetUpdate"},"WebsiteSource":{"properties":{"id":{"type":"integer","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"name":{"type":"string","title":"Name"},"customer_id":{"type":"integer","title":"Customer Id"},"type":{"type":"string","title":"Type"},"collection_id":{"type":"integer","title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"}},"type":"object","required":["id","created_at","updated_at","name","customer_id","type","collection_id"],"title":"WebsiteSource"},"WebsiteSourceCreate":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"collection_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Collection Id"}},"type":"object","required":["url"],"title":"WebsiteSourceCreate"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/admin/token"}}},"Layer API Key":{"type":"apiKey","in":"header","name":"Layer-Api-Key"},"Firebase Token":{"type":"apiKey","in":"header","name":"Firebase-Auth"},"Layer Customer API Key":{"type":"apiKey","in":"header","name":"Layer-Customer-Api-Key"}}}},"bundle":{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/admin/token":{"post":{"tags":["admin"],"summary":"Login","operationId":"admin_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_admin_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/customers":{"get":{"tags":["admin"],"summary":"Get All Customers","operationId":"admin_get_all_customers_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Customer"},"type":"array","title":"Response Admin Get All Customers Get"}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]},"post":{"tags":["admin"],"summary":"Create Customer","operationId":"admin_create_customer_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreateAdmin"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/customers/hash/{customer_id}":{"get":{"tags":["admin"],"summary":"Get Customer Hashed Id","operationId":"admin_get_customer_hashed_id_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerHashedId"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/customers/{customer_id}":{"get":{"tags":["admin"],"summary":"Get Customer","operationId":"admin_get_customer_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["admin"],"summary":"Update Customer","operationId":"admin_update_customer_patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerUpdateAdmin"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["admin"],"summary":"Delete Customer","operationId":"admin_delete_customer_delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/customers/{customer_id}/firebase_token":{"get":{"tags":["admin"],"summary":"Get Customer Firebase Token","operationId":"admin_get_customer_firebase_token_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"customer_id","in":"path","required":true,"schema":{"type":"integer","title":"Customer Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Token"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/extensions":{"get":{"tags":["admin"],"summary":"Get All Extensions","operationId":"admin_get_all_extensions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Extension"},"type":"array","title":"Response Admin Get All Extensions Get"}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/extensions/{extension_id}/download/{special_object_name}":{"get":{"tags":["admin"],"summary":"Download Extension Object","operationId":"admin_download_extension_object_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}},{"name":"special_object_name","in":"path","required":true,"schema":{"type":"string","title":"Special Object Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/octet-stream":{"schema":{"type":"string"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/message_logs":{"get":{"tags":["admin"],"summary":"Get All Message Logs","operationId":"admin_get_all_message_logs_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/MessageLog"},"type":"array","title":"Response Admin Get All Message Logs Get"}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/admin/sync":{"get":{"tags":["admin"],"summary":"Sync Outdated Sources","operationId":"admin_sync_outdated_sources_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"}},"security":[{"OAuth2PasswordBearer":[]}]}},"/chat/vscode":{"post":{"tags":["chat"],"summary":"Vscode Completion","operationId":"chat_vscode_completion_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/VSCodeCompletionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PromptResponse"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/completion":{"post":{"tags":["chat"],"summary":"Get Completion","operationId":"chat_get_completion_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompletionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompletionResponse"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/search":{"post":{"tags":["chat"],"summary":"Search","operationId":"chat_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponse"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/completion/stream":{"post":{"tags":["chat"],"summary":"Stream Completion","operationId":"chat_stream_completion_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StreamedCompletionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/chat/copilot/{api_key}":{"post":{"tags":["chat"],"summary":"Copilot Endpoint","operationId":"chat_copilot_endpoint_post","parameters":[{"name":"api_key","in":"path","required":true,"schema":{"type":"string","title":"Api Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chat/message_logs":{"get":{"tags":["chat"],"summary":"Get Message Logs","operationId":"chat_get_message_logs_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/MessageLog"},"type":"array","title":"Response Chat Get Message Logs Get"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/collections/":{"get":{"tags":["collections"],"summary":"Get All Collections","operationId":"collections_get_all_collections_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Collection"},"type":"array","title":"Response Collections Get All Collections Get"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/collections/{collection_id}":{"get":{"tags":["collections"],"summary":"Get Collection","operationId":"collections_get_collection_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"collection_id","in":"path","required":true,"schema":{"type":"integer","title":"Collection Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Collection"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crawls/site":{"get":{"tags":["crawls"],"summary":"Get Crawl Site Job Ids","operationId":"crawls_get_crawl_site_job_ids_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlJobKeys"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"post":{"tags":["crawls"],"summary":"Crawl Website","operationId":"crawls_crawl_website_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlSiteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/crawls/site/{job_key}":{"get":{"tags":["crawls"],"summary":"Get Crawl Site Progress","operationId":"crawls_get_crawl_site_progress_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"job_key","in":"path","required":true,"schema":{"type":"string","title":"Job Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlSiteProgress"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["crawls"],"summary":"Clear Crawl","operationId":"crawls_clear_crawl_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"job_key","in":"path","required":true,"schema":{"type":"string","title":"Job Key"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/crawls/github":{"post":{"tags":["crawls"],"summary":"Crawl Github","operationId":"crawls_crawl_github_post","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"token","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlGitHubRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlGitHubResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/":{"get":{"tags":["customers"],"summary":"Get Customer","operationId":"customers_get_customer_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"post":{"tags":["customers"],"summary":"Create Customer","operationId":"customers_create_customer_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]}]}},"/customers/transferring/{customer_hash}":{"get":{"tags":["customers"],"summary":"Get Customer Transferring","operationId":"customers_get_customer_transferring_get","parameters":[{"name":"customer_hash","in":"path","required":true,"schema":{"type":"string","title":"Customer Hash"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/{customer_hash}":{"patch":{"tags":["customers"],"summary":"Update Customer Email","operationId":"customers_update_customer_email_patch","security":[{"Firebase Token":[]}],"parameters":[{"name":"customer_hash","in":"path","required":true,"schema":{"type":"string","title":"Customer Hash"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/name/{company_name}":{"get":{"tags":["customers"],"summary":"Check Name Availability","operationId":"customers_check_name_availability_get","parameters":[{"name":"company_name","in":"path","required":true,"schema":{"type":"string","title":"Company Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NameCheck"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/embeds/":{"get":{"tags":["embeds"],"summary":"Get Embed Job Progress","operationId":"embeds_get_embed_job_progress_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedJobsProgress"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/extensions/":{"get":{"tags":["extensions"],"summary":"Get Extensions","operationId":"extensions_get_extensions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Extension"},"type":"array","title":"Response Extensions Get Extensions Get"}}}},"404":{"description":"Not found"}},"security":[{"Layer API Key":[]}]}},"/extensions/{extension_id}":{"put":{"tags":["extensions"],"summary":"Update Extension","operationId":"extensions_update_extension_put","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}}],"requestBody":{"required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/ExtensionUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Extension"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["extensions"],"summary":"Delete Extension","operationId":"extensions_delete_extension_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extensions/{extension_id}/publish/{template_name}":{"get":{"tags":["extensions"],"summary":"Publish Extension","operationId":"extensions_publish_extension_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}},{"name":"template_name","in":"path","required":true,"schema":{"type":"string","title":"Template Name"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extensions/{extension_id}/download/{special_object_name}":{"get":{"tags":["extensions"],"summary":"Download Object","operationId":"extensions_download_object_get","security":[{"Layer API Key":[]}],"parameters":[{"name":"extension_id","in":"path","required":true,"schema":{"type":"integer","title":"Extension Id"}},{"name":"special_object_name","in":"path","required":true,"schema":{"type":"string","title":"Special Object Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/octet-stream":{"schema":{"type":"string"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extensions/templates":{"get":{"tags":["extensions"],"summary":"List Templates","operationId":"extensions_list_templates_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtensionTemplateOptions"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/health/":{"get":{"tags":["health"],"summary":"All Checks","operationId":"health_all_checks_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/health/database":{"get":{"tags":["health"],"summary":"Database Check","operationId":"health_database_check_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/health/marketplace":{"get":{"tags":["health"],"summary":"Marketplace Check","operationId":"health_marketplace_check_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/health/storage":{"get":{"tags":["health"],"summary":"Storage Check","operationId":"health_storage_check_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Health"}}}},"404":{"description":"Not found"}}}},"/rag_config/":{"get":{"tags":["rag config"],"summary":"Get Rag Configuration","operationId":"rag config_get_rag_configuration_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RAGConfiguration"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"put":{"tags":["rag config"],"summary":"Update Rag Configuration","operationId":"rag config_update_rag_configuration_put","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RAGConfigurationUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RAGConfiguration"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/":{"get":{"tags":["sources"],"summary":"Get Sources","operationId":"sources_get_sources_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"anyOf":[{"$ref":"#/components/schemas/DocumentSource"},{"$ref":"#/components/schemas/SuggestionSource"},{"$ref":"#/components/schemas/WebsiteSource"}]},"type":"array","title":"Response Sources Get Sources Get"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/{source_id}":{"get":{"tags":["sources"],"summary":"Get Source","operationId":"sources_get_source_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/DocumentSource"},{"$ref":"#/components/schemas/SuggestionSource"},{"$ref":"#/components/schemas/WebsiteSource"}],"title":"Response Sources Get Source Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["sources"],"summary":"Delete Source","operationId":"sources_delete_source_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/document/types":{"get":{"tags":["sources"],"summary":"Get Supported Types","operationId":"sources_get_supported_types_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSourceSupportedTypes"}}}},"404":{"description":"Not found"}}}},"/sources/embeddings/{source_id}":{"get":{"tags":["sources"],"summary":"Get Embeddings","operationId":"sources_get_embeddings_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SourceEmbedding"},"title":"Response Sources Get Embeddings Get"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/document":{"post":{"tags":["sources"],"summary":"Create Document Source","operationId":"sources_create_document_source_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/DocumentSourceCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/suggestion":{"post":{"tags":["sources"],"summary":"Create Suggestion Source","operationId":"sources_create_suggestion_source_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSourceCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/website":{"post":{"tags":["sources"],"summary":"Create Website Sources","operationId":"sources_create_website_sources_post","requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/WebsiteSourceCreate"},"type":"array","title":"Sources"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedJobKeys"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/github":{"post":{"tags":["sources"],"summary":"Create Github Sources","operationId":"sources_create_github_sources_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitHubSourcesCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedJobKeys"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/llms":{"post":{"tags":["sources"],"summary":"Create Sources From Llms Txt","operationId":"sources_create_sources_from_llms_txt_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/DocumentSourceCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SimpleDocumentSourceCreate"},"type":"array","title":"Response Sources Create Sources From Llms Txt Post"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/document/{source_id}":{"patch":{"tags":["sources"],"summary":"Update Document Source","operationId":"sources_update_document_source_patch","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"requestBody":{"required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/DocumentSourceUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/suggestion/{source_id}":{"patch":{"tags":["sources"],"summary":"Update Suggestion Source","operationId":"sources_update_suggestion_source_patch","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSourceUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionSource"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/website/sync/{source_id}":{"get":{"tags":["sources"],"summary":"Sync Website Source","operationId":"sources_sync_website_source_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["sources"],"summary":"Clear Sync Website Status","operationId":"sources_clear_sync_website_status_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/website/sync":{"post":{"tags":["sources"],"summary":"Sync Multi Website Sources","operationId":"sources_sync_multi_website_sources_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncMultiSiteRequest"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/website/sync/{source_id}/status":{"get":{"tags":["sources"],"summary":"Get Sync Website Status","operationId":"sources_get_sync_website_status_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"source_id","in":"path","required":true,"schema":{"type":"integer","title":"Source Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncSiteStatus"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sources/website/sync/status":{"post":{"tags":["sources"],"summary":"Get Multi Sync Website Status","operationId":"sources_get_multi_sync_website_status_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncMultiSiteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncMultiSiteStatus"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/sources/delete":{"post":{"tags":["sources"],"summary":"Delete Sources","operationId":"sources_delete_sources_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteSources"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tasks/crawl_site":{"post":{"tags":["tasks"],"summary":"Crawl Site","operationId":"tasks_crawl_site_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CrawlSiteMessage"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tasks/embed_site":{"post":{"tags":["tasks"],"summary":"Embed Site","operationId":"tasks_embed_site_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedMultiSiteMessage"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tasks/embed_github":{"post":{"tags":["tasks"],"summary":"Embed Github","operationId":"tasks_embed_github_post","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"token","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbedGitHubMessage"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tasks/sync_site":{"post":{"tags":["tasks"],"summary":"Sync Site","operationId":"tasks_sync_site_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SyncSiteMessage"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tools/":{"get":{"tags":["tools"],"summary":"Get Tools","operationId":"tools_get_tools_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Tool"},"type":"array","title":"Response Tools Get Tools Get"}}}},"404":{"description":"Not found"}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]},"post":{"tags":["tools"],"summary":"Create Tool","operationId":"tools_create_tool_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tool"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}]}},"/tools/{tool_id}":{"get":{"tags":["tools"],"summary":"Get Tool","operationId":"tools_get_tool_get","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tool"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["tools"],"summary":"Update Tool","operationId":"tools_update_tool_patch","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tool"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["tools"],"summary":"Delete Tool","operationId":"tools_delete_tool_delete","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"responses":{"204":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tools/call":{"post":{"tags":["tools"],"summary":"Call Tool","operationId":"tools_call_tool_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolCall"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolMessage"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"Layer API Key":[]}]}},"/tools/call/{tool_id}":{"post":{"tags":["tools"],"summary":"Call Tool By Id","operationId":"tools_call_tool_by_id_post","security":[{"Layer API Key":[]}],"parameters":[{"name":"tool_id","in":"path","required":true,"schema":{"type":"integer","title":"Tool Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolCall"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ToolMessage"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tools/convert_openapi":{"post":{"tags":["tools"],"summary":"Convert Openapi To Tool Call","operationId":"tools_convert_openapi_to_tool_call_post","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_tools_convert_openapi_to_tool_call_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/web_widgets/":{"get":{"tags":["web_widgets"],"summary":"Get Web Widgets","operationId":"web_widgets_get_web_widgets_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/WebWidget"},"type":"array","title":"Response Web Widgets Get Web Widgets Get"}}}},"404":{"description":"Not found"}},"security":[{"Layer API Key":[]}]}},"/web_widgets/{web_widget_id}":{"put":{"tags":["web_widgets"],"summary":"Update Widget","operationId":"web_widgets_update_widget_put","security":[{"Firebase Token":[]},{"Layer Customer API Key":[]}],"parameters":[{"name":"web_widget_id","in":"path","required":true,"schema":{"type":"integer","title":"Web Widget Id"}}],"requestBody":{"required":true,"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/WebWidgetUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebWidget"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/web_widgets/{web_widget_id}/download-logo":{"get":{"tags":["web_widgets"],"summary":"Download Logo","operationId":"web_widgets_download_logo_get","security":[{"Layer API Key":[]}],"parameters":[{"name":"web_widget_id","in":"path","required":true,"schema":{"type":"integer","title":"Web Widget Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/octet-stream":{"schema":{"type":"string"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Root","operationId":"root_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Body_admin_login_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"password"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_admin_login_post"},"Body_tools_convert_openapi_to_tool_call_post":{"properties":{"file":{"type":"string","format":"binary","title":"File","description":"OpenAPI spec file"}},"type":"object","required":["file"],"title":"Body_tools_convert_openapi_to_tool_call_post"},"Citation":{"properties":{"name":{"type":"string","title":"Name"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"}},"type":"object","required":["name"],"title":"Citation"},"CitationExtended":{"properties":{"name":{"type":"string","title":"Name"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"type":{"type":"string","title":"Type"}},"type":"object","required":["name","type"],"title":"CitationExtended"},"Collection":{"properties":{"name":{"$ref":"#/components/schemas/CollectionName"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"id":{"type":"integer","title":"Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["name","description","id","customer_id"],"title":"Collection"},"CollectionName":{"type":"string","enum":["Main","Suggestions","Code"],"title":"CollectionName"},"CompletionRequest":{"properties":{"query":{"type":"string","title":"Query"},"history":{"anyOf":[{"items":{"anyOf":[{"$ref":"#/components/schemas/Message"},{"$ref":"#/components/schemas/ToolMessage"}]},"type":"array"},{"type":"null"}],"title":"History"},"references":{"anyOf":[{"items":{"$ref":"#/components/schemas/Reference"},"type":"array"},{"type":"null"}],"title":"References"},"token_limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Token Limit"}},"type":"object","required":["query"],"title":"CompletionRequest"},"CompletionResponse":{"properties":{"message":{"type":"string","title":"Message"},"citations":{"items":{"$ref":"#/components/schemas/Citation"},"type":"array","title":"Citations"},"tool_calls":{"items":{"$ref":"#/components/schemas/ToolCall"},"type":"array","title":"Tool Calls"}},"type":"object","required":["message","citations","tool_calls"],"title":"CompletionResponse"},"CrawlGitHubRequest":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"}},"type":"object","required":["url"],"title":"CrawlGitHubRequest"},"CrawlGitHubResponse":{"properties":{"file_paths":{"items":{"type":"string"},"type":"array","title":"File Paths"}},"type":"object","required":["file_paths"],"title":"CrawlGitHubResponse"},"CrawlJobKeys":{"properties":{"job_keys":{"items":{"type":"string"},"type":"array","title":"Job Keys"}},"type":"object","required":["job_keys"],"title":"CrawlJobKeys"},"CrawlResponse":{"properties":{"job_key":{"type":"string","title":"Job Key"}},"type":"object","required":["job_key"],"title":"CrawlResponse"},"CrawlSiteMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"url_filters":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Url Filters"}},"type":"object","required":["job_key","customer_id","url"],"title":"CrawlSiteMessage"},"CrawlSiteProgress":{"properties":{"status":{"anyOf":[{"$ref":"#/components/schemas/CrawlSiteStatus"},{"type":"null"}]},"successful_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"Successful Urls"},"failed_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"Failed Urls"},"visited_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"Visited Urls"},"to_visit_urls":{"items":{"type":"string","minLength":1,"format":"uri"},"type":"array","title":"To Visit Urls"}},"type":"object","required":["successful_urls","failed_urls","visited_urls","to_visit_urls"],"title":"CrawlSiteProgress"},"CrawlSiteRequest":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"url_filters":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Url Filters"}},"type":"object","required":["url"],"title":"CrawlSiteRequest"},"CrawlSiteStatus":{"type":"string","enum":["STARTED","CANCELED","DONE"],"title":"CrawlSiteStatus"},"Customer":{"properties":{"company_name":{"type":"string","title":"Company Name"},"id":{"type":"integer","title":"Id"},"email":{"type":"string","title":"Email"},"api_key":{"type":"string","title":"Api Key"},"customer_api_key":{"type":"string","title":"Customer Api Key"},"handing_off":{"type":"boolean","title":"Handing Off"}},"type":"object","required":["company_name","id","email","api_key","customer_api_key","handing_off"],"title":"Customer"},"CustomerCreate":{"properties":{"company_name":{"type":"string","title":"Company Name"}},"type":"object","required":["company_name"],"title":"CustomerCreate"},"CustomerCreateAdmin":{"properties":{"company_name":{"type":"string","title":"Company Name"},"email":{"type":"string","title":"Email"},"password":{"type":"string","title":"Password"}},"type":"object","required":["company_name","email","password"],"title":"CustomerCreateAdmin"},"CustomerHashedId":{"properties":{"hashed_id":{"type":"string","title":"Hashed Id"}},"type":"object","required":["hashed_id"],"title":"CustomerHashedId"},"CustomerUpdateAdmin":{"properties":{"company_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Company Name"},"email":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Email"},"api_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Api Key"},"customer_api_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Customer Api Key"},"handing_off":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Handing Off"}},"type":"object","title":"CustomerUpdateAdmin"},"DeleteSources":{"properties":{"ids":{"items":{"type":"integer"},"type":"array","title":"Ids"}},"type":"object","required":["ids"],"title":"DeleteSources"},"DocumentSource":{"properties":{"id":{"type":"integer","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"name":{"type":"string","title":"Name"},"customer_id":{"type":"integer","title":"Customer Id"},"type":{"type":"string","title":"Type"},"collection_id":{"type":"integer","title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"filename":{"type":"string","title":"Filename"},"extension":{"type":"string","title":"Extension"}},"type":"object","required":["id","created_at","updated_at","name","customer_id","type","collection_id","filename","extension"],"title":"DocumentSource"},"DocumentSourceCreate":{"properties":{"name":{"type":"string","title":"Name"},"file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"File"},"collection_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"}},"type":"object","required":["name"],"title":"DocumentSourceCreate"},"DocumentSourceSupportedTypes":{"properties":{"types":{"items":{"type":"string"},"type":"array","title":"Types"}},"type":"object","required":["types"],"title":"DocumentSourceSupportedTypes"},"DocumentSourceUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"File"}},"type":"object","title":"DocumentSourceUpdate"},"EmbedGitHubMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"},"owner":{"type":"string","title":"Owner"},"repo":{"type":"string","title":"Repo"},"file_path":{"type":"string","title":"File Path"}},"type":"object","required":["job_key","customer_id","owner","repo","file_path"],"title":"EmbedGitHubMessage"},"EmbedJobKeys":{"properties":{"job_keys":{"items":{"type":"string"},"type":"array","title":"Job Keys"}},"type":"object","required":["job_keys"],"title":"EmbedJobKeys"},"EmbedJobStatus":{"type":"string","enum":["QUEUED","STARTED","CANCELED","DONE"],"title":"EmbedJobStatus"},"EmbedJobsProgress":{"properties":{"status":{"anyOf":[{"$ref":"#/components/schemas/EmbedJobStatus"},{"type":"null"}]},"finished":{"type":"integer","title":"Finished"},"total":{"type":"integer","title":"Total"}},"type":"object","required":["finished","total"],"title":"EmbedJobsProgress"},"EmbedMultiSiteMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"sites":{"items":{"$ref":"#/components/schemas/EmbedSingleSiteMessage"},"type":"array","title":"Sites"}},"type":"object","required":["job_key","customer_id","sites"],"title":"EmbedMultiSiteMessage"},"EmbedSingleSiteMessage":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"collection_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Collection Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"}},"type":"object","required":["url"],"title":"EmbedSingleSiteMessage"},"Extension":{"properties":{"name":{"type":"string","title":"Name"},"participant_name":{"type":"string","title":"Participant Name"},"participant_description":{"type":"string","title":"Participant Description"},"display_name":{"type":"string","title":"Display Name"},"description":{"type":"string","title":"Description"},"id":{"type":"integer","title":"Id"},"owner":{"type":"integer","title":"Owner"},"logo_url":{"type":"string","minLength":1,"format":"uri","title":"Logo Url"},"readme_url":{"type":"string","minLength":1,"format":"uri","title":"Readme Url"},"pending_publish":{"type":"boolean","title":"Pending Publish"},"version":{"type":"string","title":"Version"},"marketplace_url":{"type":"string","minLength":1,"format":"uri","title":"Marketplace Url"}},"type":"object","required":["name","participant_name","participant_description","display_name","description","id","owner","logo_url","readme_url","pending_publish","version","marketplace_url"],"title":"Extension"},"ExtensionTemplateOptions":{"properties":{"template_names":{"items":{"type":"string"},"type":"array","title":"Template Names"}},"type":"object","required":["template_names"],"title":"ExtensionTemplateOptions"},"ExtensionUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"participant_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Participant Name"},"participant_description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Participant Description"},"display_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Display Name"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"logo_file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Logo File"},"readme_file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Readme File"}},"type":"object","title":"ExtensionUpdate"},"FunctionCall":{"properties":{"name":{"type":"string","title":"Name"},"arguments":{"type":"string","title":"Arguments"}},"type":"object","required":["name","arguments"],"title":"FunctionCall"},"GitHubSourcesCreate":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Token"},"file_paths":{"items":{"type":"string"},"type":"array","title":"File Paths"}},"type":"object","required":["url","file_paths"],"title":"GitHubSourcesCreate"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Health":{"properties":{"status":{"type":"string","title":"Status"}},"type":"object","required":["status"],"title":"Health"},"JSONSchemaObject":{"properties":{"type":{"type":"string","enum":["object"],"const":"object","title":"Type","default":"object"},"properties":{"type":"object","title":"Properties"},"required":{"items":{"type":"string"},"type":"array","title":"Required"},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":false}},"type":"object","required":["properties"],"title":"JSONSchemaObject"},"Message":{"properties":{"role":{"$ref":"#/components/schemas/MessageRole"},"content":{"type":"string","title":"Content"},"tool_calls":{"anyOf":[{"items":{"$ref":"#/components/schemas/ToolCall"},"type":"array"},{"type":"null"}],"title":"Tool Calls"}},"type":"object","required":["role","content"],"title":"Message"},"MessageExtended":{"properties":{"role":{"$ref":"#/components/schemas/MessageRole"},"content":{"type":"string","title":"Content"},"tool_calls":{"anyOf":[{"items":{"$ref":"#/components/schemas/ToolCall"},"type":"array"},{"type":"null"}],"title":"Tool Calls"},"citation":{"anyOf":[{"$ref":"#/components/schemas/Citation"},{"type":"null"}]},"reference":{"anyOf":[{"$ref":"#/components/schemas/Reference"},{"type":"null"}]}},"type":"object","required":["role","content"],"title":"MessageExtended"},"MessageLog":{"properties":{"message":{"type":"string","title":"Message"},"ip":{"type":"string","format":"ipvanyaddress","title":"Ip"},"id":{"type":"integer","title":"Id"},"customer_id":{"type":"integer","title":"Customer Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"}},"type":"object","required":["message","ip","id","customer_id","created_at"],"title":"MessageLog"},"MessageRole":{"type":"string","enum":["assistant","user","system","tool"],"title":"MessageRole"},"MethodType":{"type":"string","enum":["GET","PATCH","POST","PUT","DELETE"],"title":"MethodType"},"NameCheck":{"properties":{"available":{"type":"boolean","title":"Available"}},"type":"object","required":["available"],"title":"NameCheck"},"PromptResponse":{"properties":{"messages":{"items":{"$ref":"#/components/schemas/MessageExtended"},"type":"array","title":"Messages"}},"type":"object","required":["messages"],"title":"PromptResponse"},"RAGConfiguration":{"properties":{"customer_id":{"type":"integer","title":"Customer Id"},"system_prompt":{"type":"string","title":"System Prompt"}},"type":"object","required":["customer_id","system_prompt"],"title":"RAGConfiguration"},"RAGConfigurationUpdate":{"properties":{"system_prompt":{"type":"string","title":"System Prompt"}},"type":"object","required":["system_prompt"],"title":"RAGConfigurationUpdate"},"Reference":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"value":{"type":"string","title":"Value"}},"type":"object","required":["id","name","value"],"title":"Reference"},"SearchRequest":{"properties":{"query":{"type":"string","title":"Query"},"top_n":{"type":"integer","title":"Top N","default":3}},"type":"object","required":["query"],"title":"SearchRequest"},"SearchResponse":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/CitationExtended"},"type":"array","title":"Sources"}},"type":"object","required":["sources"],"title":"SearchResponse"},"SimpleDocumentSourceCreate":{"properties":{"name":{"type":"string","title":"Name"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"}},"type":"object","required":["name","url"],"title":"SimpleDocumentSourceCreate"},"SourceEmbedding":{"properties":{"id":{"type":"integer","title":"Id"},"source_id":{"type":"integer","title":"Source Id"},"embedding":{"items":{"type":"number"},"type":"array","title":"Embedding"},"document":{"type":"string","title":"Document"},"prev_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Prev Id"}},"type":"object","required":["id","source_id","embedding","document"],"title":"SourceEmbedding"},"StreamedCompletionRequest":{"properties":{"query":{"type":"string","title":"Query"},"history":{"anyOf":[{"items":{"anyOf":[{"$ref":"#/components/schemas/Message"},{"$ref":"#/components/schemas/ToolMessage"}]},"type":"array"},{"type":"null"}],"title":"History"},"references":{"anyOf":[{"items":{"$ref":"#/components/schemas/Reference"},"type":"array"},{"type":"null"}],"title":"References"},"token_limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Token Limit"},"sources":{"items":{"$ref":"#/components/schemas/CitationExtended"},"type":"array","title":"Sources"}},"type":"object","required":["query","sources"],"title":"StreamedCompletionRequest"},"SuggestionSource":{"properties":{"id":{"type":"integer","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"name":{"type":"string","title":"Name"},"customer_id":{"type":"integer","title":"Customer Id"},"type":{"type":"string","title":"Type"},"collection_id":{"type":"integer","title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"question":{"type":"string","title":"Question"},"answer":{"type":"string","title":"Answer"}},"type":"object","required":["id","created_at","updated_at","name","customer_id","type","collection_id","question","answer"],"title":"SuggestionSource"},"SuggestionSourceCreate":{"properties":{"name":{"type":"string","title":"Name"},"question":{"type":"string","title":"Question"},"answer":{"type":"string","title":"Answer"}},"type":"object","required":["name","question","answer"],"title":"SuggestionSourceCreate"},"SuggestionSourceUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"question":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Question"},"answer":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Answer"}},"type":"object","title":"SuggestionSourceUpdate"},"SyncMultiSiteRequest":{"properties":{"ids":{"items":{"type":"integer"},"type":"array","title":"Ids"}},"type":"object","required":["ids"],"title":"SyncMultiSiteRequest"},"SyncMultiSiteStatus":{"properties":{"statuses":{"additionalProperties":{"anyOf":[{"$ref":"#/components/schemas/SyncStatus"},{"type":"null"}]},"type":"object","title":"Statuses"}},"type":"object","required":["statuses"],"title":"SyncMultiSiteStatus"},"SyncSiteMessage":{"properties":{"job_key":{"type":"string","title":"Job Key"},"customer_id":{"type":"integer","title":"Customer Id"},"source_id":{"type":"integer","title":"Source Id"}},"type":"object","required":["job_key","customer_id","source_id"],"title":"SyncSiteMessage"},"SyncSiteStatus":{"properties":{"status":{"anyOf":[{"$ref":"#/components/schemas/SyncStatus"},{"type":"null"}]}},"type":"object","title":"SyncSiteStatus"},"SyncStatus":{"type":"string","enum":["QUEUED","STARTED","DONE"],"title":"SyncStatus"},"Token":{"properties":{"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type"}},"type":"object","required":["access_token","token_type"],"title":"Token"},"Tool":{"properties":{"name":{"type":"string","maxLength":64,"pattern":"^[a-zA-Z0-9_-]+$","title":"Name"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"description":{"type":"string","title":"Description"},"method":{"$ref":"#/components/schemas/MethodType"},"parameters":{"anyOf":[{"$ref":"#/components/schemas/ToolArgumentsParameters-Output"},{"type":"null"}]},"strict":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Strict"},"id":{"type":"integer","title":"Id"},"customer_id":{"type":"integer","title":"Customer Id"}},"type":"object","required":["name","url","description","method","id","customer_id"],"title":"Tool"},"ToolArgumentsParameters-Input":{"properties":{"type":{"type":"string","enum":["object"],"const":"object","title":"Type","default":"object"},"properties":{"$ref":"#/components/schemas/ToolArgumentsProperties"},"required":{"items":{"type":"string"},"type":"array","title":"Required"},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":false}},"type":"object","required":["properties"],"title":"ToolArgumentsParameters"},"ToolArgumentsParameters-Output":{"properties":{"type":{"type":"string","enum":["object"],"const":"object","title":"Type","default":"object"},"properties":{"$ref":"#/components/schemas/ToolArgumentsProperties"},"required":{"items":{"type":"string"},"type":"array","title":"Required"},"additionalProperties":{"type":"boolean","title":"Additionalproperties","default":false}},"type":"object","required":["properties"],"title":"ToolArgumentsParameters"},"ToolArgumentsProperties":{"properties":{"path":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]},"query":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]},"body":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]},"auth":{"anyOf":[{"$ref":"#/components/schemas/JSONSchemaObject"},{"type":"null"}]}},"type":"object","title":"ToolArgumentsProperties"},"ToolCall":{"properties":{"id":{"type":"string","title":"Id"},"type":{"type":"string","enum":["function"],"const":"function","title":"Type","default":"function"},"function":{"$ref":"#/components/schemas/FunctionCall"}},"type":"object","required":["id","function"],"title":"ToolCall"},"ToolCreate":{"properties":{"name":{"type":"string","maxLength":64,"pattern":"^[a-zA-Z0-9_-]+$","title":"Name"},"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"description":{"type":"string","title":"Description"},"method":{"$ref":"#/components/schemas/MethodType"},"parameters":{"anyOf":[{"$ref":"#/components/schemas/ToolArgumentsParameters-Input"},{"type":"null"}]},"strict":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Strict"}},"type":"object","required":["name","url","description","method"],"title":"ToolCreate"},"ToolMessage":{"properties":{"role":{"type":"string","enum":["tool"],"const":"tool","title":"Role","default":"tool"},"content":{"type":"string","title":"Content"},"tool_call_id":{"type":"string","title":"Tool Call Id"}},"type":"object","required":["content","tool_call_id"],"title":"ToolMessage"},"ToolUpdate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"method":{"anyOf":[{"$ref":"#/components/schemas/MethodType"},{"type":"null"}]},"parameters":{"anyOf":[{"$ref":"#/components/schemas/ToolArgumentsParameters-Input"},{"type":"null"}]},"strict":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Strict"}},"type":"object","title":"ToolUpdate"},"VSCodeCompletionRequest":{"properties":{"query":{"type":"string","title":"Query"},"history":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"History"},"references":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"References"},"token_limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Token Limit"},"files":{"anyOf":[{"items":{"type":"string","format":"binary"},"type":"array"},{"type":"null"}],"title":"Files"}},"type":"object","required":["query"],"title":"VSCodeCompletionRequest"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WebWidget":{"properties":{"product_name":{"type":"string","title":"Product Name"},"primary_color":{"type":"string","title":"Primary Color"},"id":{"type":"integer","title":"Id"},"owner":{"type":"integer","title":"Owner"},"logo_url":{"type":"string","minLength":1,"format":"uri","title":"Logo Url"}},"type":"object","required":["product_name","primary_color","id","owner","logo_url"],"title":"WebWidget"},"WebWidgetUpdate":{"properties":{"product_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Product Name"},"primary_color":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Primary Color"},"logo_file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"Logo File"}},"type":"object","title":"WebWidgetUpdate"},"WebsiteSource":{"properties":{"id":{"type":"integer","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"name":{"type":"string","title":"Name"},"customer_id":{"type":"integer","title":"Customer Id"},"type":{"type":"string","title":"Type"},"collection_id":{"type":"integer","title":"Collection Id"},"url":{"anyOf":[{"type":"string","minLength":1,"format":"uri"},{"type":"null"}],"title":"Url"}},"type":"object","required":["id","created_at","updated_at","name","customer_id","type","collection_id"],"title":"WebsiteSource"},"WebsiteSourceCreate":{"properties":{"url":{"type":"string","minLength":1,"format":"uri","title":"Url"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"collection_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Collection Id"}},"type":"object","required":["url"],"title":"WebsiteSourceCreate"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"/admin/token"}}},"Layer API Key":{"type":"apiKey","in":"header","name":"Layer-Api-Key"},"Firebase Token":{"type":"apiKey","in":"header","name":"Firebase-Auth"},"Layer Customer API Key":{"type":"apiKey","in":"header","name":"Layer-Customer-Api-Key"}}}}}},"docusaurus-theme-classic":{},"docusaurus-theme-redoc":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}}